# Copyright 2016 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
# rseq should be first due to frequency and purpose to decrease nptl latency
rseq: 1

_llseek: 1
access:1
brk: 1
capget: 1
capset: 1
chown: 1
clock_getres: 1
clock_getres_time64: 1
clock_gettime: 1
clock_gettime64: 1
close: 1
dup: 1
epoll_ctl: 1
epoll_wait: 1
exit: 1
exit_group: 1
fcntl64: 1
fdatasync: 1
fstat64: 1
fstatfs64: 1
fstatfs: 1
futex: 1
futex_time64: 1
getdents: 1
getdents64: 1
geteuid32: 1
getpid: 1
getrandom: arg2 in ~GRND_RANDOM
getresgid32: 1
getresuid32: 1
gettimeofday: 1
gettid: 1
lseek: 1
lstat64: 1
madvise: arg2 == MADV_DONTNEED
mkdir: 1
# Don't allow mmap2 with both PROT_WRITE and PROT_EXEC.
mmap2: arg2 in ~PROT_EXEC || arg2 in ~PROT_WRITE
# Don't allow mprotect with PROT_EXEC.
mprotect: arg2 in ~PROT_EXEC
munmap: 1
open: 1
openat: 1
pipe: 1
poll: 1
prctl: 1
process_vm_readv: 1
pwrite64: 1
read: 1
rename: 1
rmdir: 1
rt_sigaction: 1
rt_sigreturn: 1
rt_sigprocmask: 1
setgroups: 1
setresgid: 1
setresuid: 1
signalfd4: 1
sigreturn: 1
# On 32-bit x86, the networking operatons such as connect() and
# sendmsg() are multiplexed through the socketcall() system call. arg0
# is the operation, such as SYS_SOCKETPAIR (8). See <linux/net.h> for the
# symbolic names.
socketcall: arg0 == 1 || arg0 == 3 || arg0 == 6 || arg0 == 8 || arg0 == 9 || arg0 == 16 || arg0 == 17
stat64: 1
sysinfo: 1
tgkill: 1
time: 1
uname: 1
unlink: 1
unlinkat: 1
write: 1
