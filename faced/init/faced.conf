# Copyright 2022 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description     "Face Authentication Service"
author          "chromium-os-dev@chromium.org"

start on started system-services
stop on stopping system-services

respawn
respawn limit 3 10

# Do not respawn if the service is terminated on purpose.
normal exit 0

# Sacrifice before OOM panic.
oom score 0

env LOG_LEVEL=-1
#env SECCOMP_POLICY_FILE=/usr/share/policy/faced-seccomp.policy

script
  logger -t "${UPSTART_JOB}" "Start ${UPSTART_JOB}"
  set -x

  # Start constructing minijail0 args...
  args=""

  # Create and enter new UTS namespace (hostname/NIS domain name).
  args="${args} --uts"

  # Create and enter new PID namespace.
  args="${args} -p"

  # Create and enter new IPC namespace.
  args="${args} -l"

  # Create and enter new network namespace.
  args="${args} -e"

  # Create and enter new cgroup namespace.
  args="${args} -N"

  # Use the minimal mountns profile to start.
  args="${args} --profile minimalistic-mountns"

  # Mount (writeable) and empty /run tmpfs path.
  args="${args} -k 'tmpfs,/run,tmpfs,MS_NOSUID|MS_NODEV|MS_NOEXEC"

  # Bind-mount /run/dbus read-only for D-Bus to work.
  args="${args} -b /run/dbus"

  # Bind-mount /run/chromeos-config/v1 for access to chromeos-config.
  args="${args} -b /run/chromeos-config/v1"

  # Bind-mount the /sys directory as chromeos-config tries to get the product
  # name, sku and other details from sysfs files.
  args="${args} -b /sys"

  # Mount (writeable) and empty /var tmpfs path.
  args="${args} -k 'tmpfs,/var,tmpfs,MS_NOSUID|MS_NODEV|MS_NOEXEC"

  # Bind-mount (writeable) /dev/shm to share memory for mojo.
  args="${args} -b /dev/shm,,1"

  # Bind-mount /sbin read-only to start sandboxed processes using minijail0.
  args="${args} -b /sbin"

  # Bind-mount (writeable) the metrics directory.
  # args="${args} -b /var/lib/metrics,,1"

  # Run as faced user and group.
  args="${args} -u faced -g faced"

  # Inherit supplementary groups from user faced.
  args="${args} -G"

  # Grant no caps.
  args="${args} -c 0"

  # No new privileges (no_new_privs).
  # args="${args} -n"

  # Use faced seccomp policy.
  # args="${args} -S ${SECCOMP_POLICY_FILE}"

  # Execute the daemon.
  args="${args} -- /usr/sbin/faced"

  args="${args} --log_level=${LOG_LEVEL}"

  exec minijail0 ${args}
end script

# Wait for daemon to claim its D-Bus name before transitioning to started.
post-start exec minijail0 -u faced -g faced /usr/bin/gdbus \
    wait --system --timeout 15 org.chromium.FaceAuthDaemon
