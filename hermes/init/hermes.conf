# Copyright 2019 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description     "Daemon providing eSIM support"
author          "chromium-os-dev@chromium.org"

env LOG_LEVEL=0
import LOG_LEVEL

env ESIM_FW_PATH="/opt/google/gemalto/cosupdate.xml"
import ESIM_FW_PATH

start on started network-services
stop on starting pre-shutdown
expect fork
oom score -100
respawn
# if the job respawns 3 times in 10 seconds, stop trying.
respawn limit 3 10
# Do not respawn if we exited on purpose (e.g. service disabled).
normal exit 0

pre-start script
  if [ -f /var/cache/modem-utilities/log_hermes_debug ]; then
    LOG_LEVEL="-2"
  fi
  case "${LOG_LEVEL}" in
    -3|-2|-1|0|1|2)
      ;;
    *)
      logger -p err -t "${UPSTART_JOB}" "Unsupported log level: ${LOG_LEVEL}"
      exit 1
      ;;
  esac

  mkdir -p /var/cache/hermes # croslint: disable
  chown modem:modem /var/cache/hermes # croslint: disable
end script

# b/418078582
# Use post-start script to delete CMW500 test profile.
# CMW500 test profile with ICCID 89010000001234567882 is pre-installed
# on all the eSIMs. As per guidance from Thales, this profile must be
# deleted from all the existing ChromeOS devices to address the
# vulnerability found in b/418078582. This is a one time activity.
post-start script

# ICCID of CMW500 test profile is fixed: 89010000001234567882
CMW500_ICCID=89010000001234567882
FLAG_FILE="/mnt/stateful_partition/test_profiles_cleared"
DBUS_SERVICE_NAME="org.chromium.Hermes"
DBUS_WAIT_TIMEOUT=60 # Seconds to wait for the D-Bus service (e.g., 60 seconds)
MAX_ATTEMPTS=10      # Number of times to try
SLEEP_SECONDS=10     # Seconds to sleep between attempts
current_attempt=1

logger -t "${UPSTART_JOB}" "Starting post-start script."

# Check if the flag file exists. If it does, test profiles are already cleared.
if [ -f "${FLAG_FILE}" ]; then
  logger -t "${UPSTART_JOB}" "Test profiles already cleared. Skipping."
  exit 0
fi

logger -t "${UPSTART_JOB}" "Attempting to clear test profiles."

logger -t "${UPSTART_JOB}" "Waiting for D-Bus service '${DBUS_SERVICE_NAME}'"

# gdbus wait will exit with non-zero if it times out
if ! /usr/bin/gdbus wait --system --timeout "${DBUS_WAIT_TIMEOUT}" \
    "${DBUS_SERVICE_NAME}" 2>/dev/null; then
  # If gdbus wait fails, it means the service didn't come up within the timeout
  logger -p err -t "${UPSTART_JOB}" "D-Bus service did not become available." \
                                    "Aborting test profile clearance."
  exit 1
fi

logger -t "${UPSTART_JOB}" "Checking esim status"

while [ "$current_attempt" -le "$MAX_ATTEMPTS" ]; do
    logger -t "${UPSTART_JOB}" "Attempt ${current_attempt}/${MAX_ATTEMPTS}:"\
              "Check esim status"

    if ! modem esim status; then
        logger -t "${UPSTART_JOB}" "esim not yet ready."\
                                   "Retrying in "\
                                   "${SLEEP_SECONDS} seconds"
        sleep "${SLEEP_SECONDS}"
        current_attempt=$((current_attempt + 1)) # Increment attempt counter
        continue # Skip to next attempt
    fi
    break
done

# Check if euicc is ready
if [ "$current_attempt" -gt "$MAX_ATTEMPTS" ]; then
    logger -t "${UPSTART_JOB}" "esim not ready after "\
                               "${MAX_ATTEMPTS} attempts."
    exit 1 # Exit with error if not found
fi

logger -t "${UPSTART_JOB}" "Enable test mode and clear profile"

# By default, hermes does not allow any operations on profiles with
# profile class "Test". Switch to test mode to delete the profile.
if ! modem esim set_test_mode true; then
  logger -p err -t "${UPSTART_JOB}" "Failed to set test mode to true. "\
                                     "Aborting."
  exit 1
fi

if ! modem esim refresh_profiles; then
  logger -p err -t "${UPSTART_JOB}" "Failed to refresh profiles."\
                   "This might be expected if no profiles are found, but "\
                   "proceeding anyway."
  # Do not exit here, as the uninstall might still be necessary.
fi

if ! modem esim uninstall "${CMW500_ICCID}"; then
  logger -p err -t "${UPSTART_JOB}" "Failed to uninstall test profile."\
                                    "It might not exist."
fi

if ! modem esim set_test_mode false; then
  logger -p err -t "${UPSTART_JOB}" "Failed to set test mode to false. "\
                                     "Aborting."
  exit 1
fi

# Create the flag file to indicate that test profiles have been cleared
logger -t "${UPSTART_JOB}" "Creating flag file '${FLAG_FILE}'..."
if ! touch "${FLAG_FILE}"; then
  logger -p err -t "${UPSTART_JOB}" "Failed to create flag file '${FLAG_FILE}'."
  exit 1
fi

logger -t "${UPSTART_JOB}" "Successfully cleared test profiles."
end script

exec minijail0                                    \
     --config /usr/share/minijail/hermes.conf     \
     /usr/bin/hermes                              \
     --log_level="${LOG_LEVEL}"                   \
     --fw_path="${ESIM_FW_PATH}"
