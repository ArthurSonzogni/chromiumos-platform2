# Copyright 2021 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description   "Start Chrome OS HPS service"
author        "chromium-os-dev@chromium.org"

# Environment variables for daemon configuration.
# They are defaulted here and should be overridden in hpsd.override
env HPS_HW_FLAGS="--test --skipboot"

# hpsd is started by udev
stop on stopping boot-services
expect fork
respawn
respawn limit 2 600

# Make hpsd killable, because if it has a leak it's better to
# restart it than to OOM-panic.
oom score -100

pre-start script
  mkdir -m 0700 -p /var/lib/hpsd/metrics
  chown -R hpsd:hpsd /var/lib/hpsd
end script


# Minijail settings:
# -i exit immediately after fork
# -u run as user hpsd
# -g run as group hpsd
# -n set no_new_privs
# -R RLIMIT_NICE,40,40 to allow niceness of -20
# -T static to apply the sandbox policy before exec, so that cros_hpsd doesn't
#    need any additional SELinux privileges for doing the same
# --profile=minimalistic-mountns-nodev to set up a mostly empty pivot root
#
# Namespaces:
# -N enter new cgroup namespace
# --uts enter new UTS/hostname namespace
# -e enter new network namespace
# -p enter new pid namespace
#
# Mounts:
# -k to mount tmpfs at /run and /var (writable)
# -b /var/lib/metrics (writable) to enable UMA
# -b /var/lib/hpsd (writable) for UMA cumulative metrics
#
# For I2C:
# -b /dev (writable)
# -b /sys
# -b /sys/bus
# -b /sys/class
# -b /sys/devices (writable)
#
# For DBUS:
# -b /run/dbus
#
exec minijail0 -i -u hpsd -g hpsd \
  -n -R RLIMIT_NICE,40,40 \
  -T static \
  --profile=minimalistic-mountns-nodev \
  -N --uts -e -p \
  -k 'tmpfs,/run,tmpfs,MS_NOSUID|MS_NODEV|MS_NOEXEC' \
  -k 'tmpfs,/var,tmpfs,MS_NOSUID|MS_NODEV|MS_NOEXEC' \
  -b /var/lib/metrics,,1 \
  -b /var/lib/hpsd,,1 \
  -b /dev,,1 -b /sys -b /sys/bus -b /sys/class -b /sys/devices,,1 \
  -b /run/dbus \
  -- /usr/sbin/hpsd \
    --mcu_fw_image=/usr/lib/firmware/hps/mcu_stage1.bin \
    --fpga_bitstream=/usr/lib/firmware/hps/fpga_bitstream.bin \
    --fpga_app_image=/usr/lib/firmware/hps/fpga_application.bin \
    $HPS_HW_FLAGS
