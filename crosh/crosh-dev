#!/bin/sh
# Copyright (c) 2009-2010 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# dev-mode functionality for crosh

if [ "$(basename $0)" = "crosh-dev" ]; then
  exec "$(dirname $0)/crosh --dev"
fi

DEV_HELP='
 shell
  Open a command line shell.

 systrace [<start | stop | status>]
  Start/stop system tracing.  Turning tracing off will generate a trace
  log file in the Downloads directory with all the events collected
  since the last time tracing was enabled.  One can control the events
  collected by specifying categories after "start"; e.g. "start gfx"
  will collect only graphics-related system events.  "systrace status"
  (or just "systrace") will display the current state of tracing, including
  the set of events being traced.
'

HELP="$HELP$DEV_HELP"

cmd_shell() {
  # Use a subshell so we can change the environment without
  # affecting our caller
  (
  PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
  if [ -x /bin/bash ] ; then
    SHELL=/bin/bash
  else
    SHELL=/bin/sh
  fi
  exec $SHELL
  )
}

cmd_systrace() {
  case x"$1" in
  xstart)
    local categories;
    shift; categories="$*"
    if [ -z "${categories}" ]; then
       categories="all"
    fi
    debugd SystraceStart "string:${categories}"
    ;;
  xstop)
    local downloads_dir="/home/${USER}/user/Downloads"
    local data_file=$(mktemp ${downloads_dir}/systrace.XXXX)
    if [ $? -ne 0 ]; then
      echo "Cannot create data file ${data_file}"
      return 1
    fi
    debugd SystraceStop "fd:1" > "${data_file}"
    echo "Trace data saved to ${data_file}"
    # add symlink to the latest capture file
    ln -sf $(basename $data_file) ${downloads_dir}/systrace.latest
    ;;
  xstatus|x)
    debugd SystraceStatus
    ;;
  esac
}
