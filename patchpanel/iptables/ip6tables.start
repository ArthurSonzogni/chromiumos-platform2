*mangle
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:apply_local_source_mark - [0:0]
:skip_apply_vpn_mark - [0:0]
:apply_vpn_mark - [0:0]
:qos_detect_static - [0:0]
:qos_detect - [0:0]
:qos_detect_borealis - [0:0]
:qos_detect_doh - [0:0]
:qos_apply_dscp - [0:0]

-A PREROUTING -j qos_detect_static
-A OUTPUT -j apply_local_source_mark
-A OUTPUT -j qos_detect_static
-A OUTPUT -m mark --mark 0x0/0xffff0000 -j CONNMARK --restore-mark --nfmask 0xffff0000 --ctmask 0xffff0000
-A OUTPUT -j skip_apply_vpn_mark
-A OUTPUT -m mark --mark 0x8000/0xc000 -j apply_vpn_mark
-A apply_local_source_mark -m mark ! --mark 0x0/0x3f00 -j RETURN
-A apply_local_source_mark -m owner --uid-owner 1000 -j MARK --set-xmark 0x0100/0x3f00
-A apply_local_source_mark -m owner --uid-owner 216 -j MARK --set-xmark 0x0200/0x3f00
-A apply_local_source_mark -m owner --uid-owner 277 -j MARK --set-xmark 0x0200/0x3f00
-A apply_local_source_mark -m owner --uid-owner 269 -j MARK --set-xmark 0x0200/0x3f00
-A apply_local_source_mark -m owner --uid-owner 20131 -j MARK --set-xmark 0x0400/0x3f00
-A apply_local_source_mark -m owner --uid-owner 20138 -j MARK --set-xmark 0x0400/0x3f00
-A apply_local_source_mark -m owner --uid-owner 234 -j MARK --set-xmark 0x0400/0x3f00
-A apply_local_source_mark -m owner --uid-owner 20128 -j MARK --set-xmark 0x0200/0x3f00
-A apply_local_source_mark -m owner --uid-owner 307 -j MARK --set-xmark 0x0400/0x3f00
-A apply_local_source_mark -m mark --mark 0x0/0xc000 -m mark ! --mark 0x0/0x3f00 -j MARK --set-mark 0x8000/0xc000
-A apply_local_source_mark -m cgroup --cgroup 65537 -j MARK --set-xmark 0x300/0x3f00
-A apply_local_source_mark -m mark --mark 0x0/0x3f00 -j MARK --set-xmark 0x400/0x3f00
-A qos_apply_dscp -m mark --mark 0x20/0xe0 -j DSCP --set-dscp 0x20
-A qos_apply_dscp -m mark --mark 0x40/0xe0 -j DSCP --set-dscp 0x22
-A qos_apply_dscp -m mark --mark 0x60/0xe0 -j DSCP --set-dscp 0x30
-A qos_apply_dscp -m mark --mark 0x80/0xe0 -j DSCP --set-dscp 0x22
-A qos_detect -m mark ! --mark 0x0/0xe0 -j MARK --set-xmark 0x0/0xe0
-A qos_detect -m dscp ! --dscp 0x00 -j RETURN
-A qos_detect -j CONNMARK --restore-mark --nfmask 0xe0 --ctmask 0xe0
-A qos_detect -j qos_detect_borealis
-A qos_detect -m mark ! --mark 0x0/0xe0 -j RETURN
-A qos_detect -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j MARK --set-xmark 0x60/0xe0
-A qos_detect -p ipv6-icmp -j MARK --set-xmark 0x60/0xe0
-A qos_detect -p udp -m udp --dport 53 -j MARK --set-xmark 0x60/0xe0
-A qos_detect -p tcp -m tcp --dport 53 -j MARK --set-xmark 0x60/0xe0
-A qos_detect -j qos_detect_doh
COMMIT

*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:redirect_default_dns - [0:0]
:redirect_user_dns - [0:0]
:snat_user_dns - [0:0]

-A PREROUTING -j redirect_default_dns
-A OUTPUT -m mark --mark 0x8000/0xc000 -j redirect_user_dns
# For IPv6, the SNAT rule is expected to only be triggered when static IPv6
# is used (without SLAAC). See AddDownstreamInterfaceRules for the method
# that sets up the SNAT mark.
-A POSTROUTING -m mark --mark 0x1/0x1 -j MASQUERADE
-A POSTROUTING -m mark --mark 0x8000/0xc000 -j snat_user_dns
COMMIT

*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT DROP [0:0]
:vpn_egress_filters - [0:0]
:vpn_accept - [0:0]
:vpn_lockdown - [0:0]
:enforce_ipv6_src_prefix - [0:0]
:ingress_port_firewall - [0:0]
:egress_port_firewall - [0:0]
:accept_downstream_network - [0:0]
:drop_forward_to_bruschetta - [0:0]
:drop_output_to_bruschetta - [0:0]
:forward_tethering - [0:0]
:ingress_tethering - [0:0]
:egress_tethering - [0:0]
:accept_egress_to_dns_proxy - [0:0]

-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -p ipv6-icmp -j ACCEPT
-A INPUT -d ff02::fb/128 -p udp -m udp --dport 5353 -j ACCEPT
-A INPUT -j ingress_port_firewall
-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT
-A FORWARD -j accept_egress_to_dns_proxy
-A FORWARD -j vpn_egress_filters
-A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -j forward_tethering
-A FORWARD -j drop_forward_to_bruschetta
-A FORWARD -p ipv6-icmp -j ACCEPT
-A OUTPUT -j accept_egress_to_dns_proxy
-A OUTPUT -j vpn_egress_filters
-A OUTPUT -j drop_output_to_bruschetta
-A OUTPUT -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
-A OUTPUT -o lo -j ACCEPT
-A OUTPUT -p ipv6-icmp -m icmp6 --icmpv6-type 1 -j DROP
-A OUTPUT -p ipv6-icmp -j ACCEPT
-A OUTPUT -j egress_port_firewall
-A enforce_ipv6_src_prefix -s 2000::/3 -j DROP
-A enforce_ipv6_src_prefix -s fc00::/7 -j DROP
-A egress_tethering -p ipv6-icmp -j ACCEPT
-A egress_tethering -j DROP
-A ingress_tethering -p ipv6-icmp -j ACCEPT
-A ingress_tethering -j DROP
-A vpn_egress_filters -j vpn_accept
-A vpn_egress_filters -j vpn_lockdown
COMMIT
