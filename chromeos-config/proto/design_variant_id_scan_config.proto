syntax = "proto3";

package chromeos_config;

// Hardware information required to uniquely identify a design. For example,
// given a set of DesignVariantConfig payloads, a device could probe hardware
// and match against each DesignVariantIdScanConfig to determine which
// DesignVariantConfig to use.
message DesignVariantIdScanConfig {
    oneof firmware_name_match {
        // x86 only. Firmware name built into the firmware and reflected back
        // out in the SMBIOS tables.
        string smbios_name_match = 1;
        // ARM only. String pattern (partial) that is matched against the
        // contents of /proc/device-tree/compatible on ARM devices.
        string device_tree_compatible_match = 2;
    }

    // SKU configured during board manufacturing. Should match the value
    // returned by "cros_config /identity sku-id" (which abstracts how SKU is
    // encoded on the specific platform). Must be in the range [0, 0x7FFFFFFF].
    uint32 firmware_sku = 3;
}
