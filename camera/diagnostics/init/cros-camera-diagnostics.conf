# Copyright 2023 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description   "Start ChromeOS camera diagnostics service"
author        "chromium-os-dev@chromium.org"

start on started system-services
stop on stopping system-services

# Make the camera jobs killable, because if it has a leak it's better to restart
# it than to OOM-panic.
oom score 0

expect fork
respawn
respawn limit 10 5

env SECCOMP_POLICY_FILE=/usr/share/policy/cros-camera-diagnostics.policy

script
  # Start constructing minijail0 args
  args=""

  # Fork and daemonize an init-like process that Upstart will track
  # as the service.
  args="$args -i"

  # Change user and group to arc-camera.
  args="$args -u arc-camera -g arc-camera"

  # Inherit supplementary groups for accessing services restricted to it,
  # for example, perfetto.
  args="$args -G"

  # Enter a new network, PID, IPC and cgroup namespace.
  args="$args -e -p -l -N"

  # Write PID to /sys/fs/cgroup/cpuset/user_space/media/tasks.
  args="$args -f /sys/fs/cgroup/cpuset/user_space/media/tasks"

  # Read only access to /proc, /sys, /dev to perform USB enumeration.
  args="$args -v -P /mnt/empty -b / -b /proc -b /sys -b /dev"

  # Create /var and /run in tmpfs to mount necessary subdirectories.
  args="$args -k tmpfs,/var,tmpfs,MS_NOSUID|MS_NODEV|MS_NOEXEC"
  args="$args -k tmpfs,/run,tmpfs,MS_NOSUID|MS_NODEV|MS_NOEXEC"

  # Read/Write access to perfetto.
  args="$args -b /run/perfetto,,1"

  # Read/Write access to /var/lib/metrics to log metrics.
  args="$args -b /var/lib/metrics,,1"

  # Drop privileges and set seccomp filter.
  args="$args -n -S ${SECCOMP_POLICY_FILE}"
  args="$args -- /usr/bin/cros_camera_diagnostics_service"

  exec minijail0 $args

end script
