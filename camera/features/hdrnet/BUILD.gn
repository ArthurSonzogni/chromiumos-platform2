# Copyright 2021 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//camera/build/cc_embed_data.gni")
import("//common-mk/pkg_config.gni")

group("all") {
  deps = [
    ":hdrnet_processor_impl_test",
    ":hdrnet_stream_manipulator_test",
    ":libhdrnet",
  ]
}

pkg_config("target_defaults") {
  configs = [ "//camera/build:cros_camera_common" ]
  pkg_deps = [
    "libcros_camera",
    "libcros_camera_android_deps",
    "libsync",
  ]
}

if (use.ipu6ep) {
  cc_embed_data("embedded_hdrnet_processor_shaders_ipu6") {
    sources = [
      "//camera/features/hdrnet/shaders/postprocess_ipu6.frag",
      "//camera/features/hdrnet/shaders/preprocess_ipu6.frag",
    ]
  }
}

static_library("libhdrnet") {
  sources = [
    "//camera/features/hdrnet/hdrnet_config.cc",
    "//camera/features/hdrnet/hdrnet_device_processor.cc",
    "//camera/features/hdrnet/hdrnet_processor_impl.cc",
    "//camera/features/hdrnet/hdrnet_stream_manipulator.cc",
  ]
  libs = [ "hdrnet_cros" ]
  public_configs = [ ":target_defaults" ]
  defines = []

  # -fPIC needed by the libcros_camera.so shared library.
  configs += [ "//common-mk:pic" ]
  public_deps = [ "//camera/gpu:gpu_base" ]
  deps = [
    "//camera/gpu:image_processor",
    "//camera/gpu/egl:libegl",
    "//camera/gpu/gles:libgles",
  ]

  if (use.ipu6ep) {
    sources += [
      "//camera/features/hdrnet/hdrnet_device_processor_ipu6.cc",
      "//camera/features/hdrnet/ipu6_gamma.cc",
    ]
    defines += [ "IPU6EP" ]
    deps += [ ":embedded_hdrnet_processor_shaders_ipu6" ]
  }
}

pkg_config("test_target_defaults") {
  configs = [ ":target_defaults" ]
  pkg_deps = [ "libchrome-test" ]
}

executable("hdrnet_processor_impl_test") {
  sources = [ "//camera/features/hdrnet/hdrnet_processor_impl_test.cc" ]
  configs += [
    ":test_target_defaults",
    "//common-mk:test",
  ]
  deps = [
    ":libhdrnet",
    "//camera/gpu:gpu_test_support",
    "//camera/gpu/egl:libegl",
    "//camera/gpu/gles:libgles",
  ]
}

executable("hdrnet_stream_manipulator_test") {
  sources = [ "//camera/features/hdrnet/hdrnet_stream_manipulator_test.cc" ]
  configs += [
    ":test_target_defaults",
    "//common-mk:test",
  ]
  deps = [
    ":libhdrnet",

    # TODO(jcliang): Remove dependency on image_processor in test.
    "//camera/gpu:image_processor",
  ]
}
