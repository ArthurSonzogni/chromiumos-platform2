# Life begins with the kernel.
type kernel, chromeos_domain, domain, mlstrustedobject;

permissive kernel;

r_dir_file(kernel, rootfs)
r_dir_file(kernel, sysfs)

# allow kernel unlabeled:file { execute execute_no_trans };

allow kernel selinuxfs:dir r_dir_perms;
allow kernel selinuxfs:file rw_file_perms;
allow kernel self:security setcheckreqprot;

allow kernel unlabeled:dir search;
allow kernel cros_system_file:dir search;

# TODO: label device file in more detail.
allow kernel device:dir { search read write getattr };
allow kernel cros_dev_type:chr_file { create setattr getattr };
allow kernel cros_labeled_dev_type:chr_file write;
arc_nyc_cts_fails(
# For /dev/console before it relabels to console_device by init.
allow kernel device:chr_file write;
)
allow kernel device:dir add_name; # for dm-X device.
allow kernel device:blk_file create_file_perms;

allow kernel self:global_capability_class_set sys_nice;
arc_nyc_cts_fails(
# Violating neverallow { domain -debuggerd -vold -dumpstate -system_server } self:capability sys_ptrace;
allow kernel self:capability *;
)

allow kernel sysfs:filesystem getattr;
allow kernel labeledfs:filesystem getattr;
allow kernel device:filesystem getattr;

allow kernel device:chr_file relabelfrom;
allow kernel cros_dev_type:chr_file relabelto;

allow kernel cros_modprobe_exec:{ file lnk_file } r_file_perms;

neverallow * kernel:process { transition dyntransition };
