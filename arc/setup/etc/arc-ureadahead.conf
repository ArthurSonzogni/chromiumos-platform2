# Copyright 2016 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description   "Run ureadahead for ARC++"
author        "chromium-os-dev@chromium.org"

# Run this job in parallel with arc-setup-for-login-screen job. The job
# shouldn't be started until 'ureadahead' (which may be in tracing mode)
# is stopped, otherwise ureadahead may corrupt the $PACK file. Depending
# on start-arc-instance-for-login-screen ensures that.
start on start-arc-instance-for-login-screen

env LOGFILE=/var/log/arc-ureadahead.log

script
  ANDROID_ROOTFS_DIR=/opt/google/containers/android/rootfs/root
  SYSTEM_IMAGE=/opt/google/containers/android/system.raw.img

  exec > $LOGFILE 2>&1
  echo "$(date --rfc-3339=ns): Starting arc-ureadahead"
  set -x

  # Read-ahead files in the image.
  PACK=/var/lib/ureadahead/opt.google.containers.android.rootfs.root.pack
  if [ -e $PACK ]; then
    # The pack file size is usually 90-100KB. Remove the file if the size is
    # <= 60KB.
    MINSIZE=60k
    if [ $(find $PACK -newer $SYSTEM_IMAGE -a -size +$MINSIZE) ]; then
      # Run ureadahead. If it fails, probably because the pack file is too old
      # (>30 days) or is corrupted, remove it.
      # Note: when ureadahead is executed with a mount point argument, it does
      # not automatically switch into tracing mode even when the pack file is
      # not valid.
      ureadahead $ANDROID_ROOTFS_DIR && exit 0 || rm -f $PACK
    else
      # Remove the pack file if it exists but is older than the image.
      rm -f $PACK
    fi
  fi
  # The pack file is not available or corrupted. Fall back to arc-setup's
  # read-ahead to minimize the performance impact.
  exec /usr/sbin/arc-setup --read-ahead
end script
