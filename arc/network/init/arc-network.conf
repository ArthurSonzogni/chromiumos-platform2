# Copyright 2016 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description   "Start network for a container"
author        "chromium-os-dev@chromium.org"

start on start-arc-network
stop on stop-arc-network or stopping ui

env LOGFILE=/var/log/arc-network.log
env ARC_IFNAME=arcbr0

script
  exec > $LOGFILE 2>&1
  echo "$(date --rfc-3339=ns): Starting arc-network"
  set -x

  # Set up network to ${ARC_IFNAME}.
  ip link delete "veth_${CONTAINER_NAME}" || true
  ip link add "veth_${CONTAINER_NAME}" type veth \
    peer name "slave_${CONTAINER_NAME}"
  ifconfig "veth_${CONTAINER_NAME}" up
  # Bringing up the master side implicitly brings up the slave side.
  # Force slave_${CONTAINER_NAME} down until the container initializes it.
  # This MAC address is what has been used from the beginning.
  ip link set dev "slave_${CONTAINER_NAME}" addr 00:FF:AA:00:00:55 down
  brctl addif ${ARC_IFNAME} "veth_${CONTAINER_NAME}"

  # Wait until the container's network namespace is changed before setting up
  # the network.
  init_ns=$(readlink "/proc/1/ns/net")
  for i in `seq 1 50`; do
    if [ -d "/proc/${CONTAINER_PID}" ]; then
      ns=$(readlink "/proc/${CONTAINER_PID}/ns/net")
      if [ -n "${ns}" -a "${ns}" != "${init_ns}" ]; then
        break
      fi
    fi
    sleep 0.1
  done

  # Pass the network device in to the container.
  ip link set "slave_${CONTAINER_NAME}" netns "${CONTAINER_PID}"
  nsenter -t "${CONTAINER_PID}" -n -- \
    ip link set "slave_${CONTAINER_NAME}" name arc0

  # Start sensors in its pre-start (blocking) script.
  # TODO(yusukes): Find a better place to start the job.
  initctl emit start-arc-sensor CONTAINER_PID="${CONTAINER_PID}"

  # Signal the container that network devices are ready.
  nsenter -t "${CONTAINER_PID}" --mount --pid -- \
    /system/bin/touch /dev/.arc_network_ready

  # Enable IPv6 routing and neighbor discovery proxying.
  sysctl net.ipv6.conf.all.forwarding=1
  sysctl net.ipv6.conf.all.proxy_ndp=1

  # Temporary workaround for b/27932574 permission check.
  chown 655360:655360 /sys/class/xt_idletimer

  # Start these daemons _after_ writing .arc_network_ready to unblock /init as
  # early as possible.
  # TODO(b/29972050): Find a better way to start the jobs.
  initctl start -n arc-obb-mounter
  initctl start -n arc-removable-media

  # Start the daemon that handles multicast and IPv6.  This logs to syslog.
  exec /usr/bin/arc-networkd --con_netns=$CONTAINER_PID \
      --internal_interface=${ARC_IFNAME}
end script

post-stop script
  exec >> $LOGFILE 2>&1
  echo "$(date --rfc-3339=ns): Post-stop arc-network"
  set +e -x

  # TODO(yusukes): Move it to arc-setup.conf.
  initctl emit stop-arc-sensor
end script
