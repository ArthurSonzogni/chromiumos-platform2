# Copyright 2020 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description    "Mount the MyFiles directory using mount-passthrough."
author         "chromium-os-dev@chromium.org"

# This job is started by the Chrome browser.
# Stop the job on 'stopping ui' because media directories will become
# unavailable after that point.
stop on stopping ui or stopping vm_concierge

# Do not allow OOM killer to terminate this job since it will break file
# sharing support (which e.g. our Photos app relies on) until ARCVM restarts.
# TODO(b/164939771): Choose a better OOM score which guarantees the Chrome
# browser process is always terminated before this one.
oom score never

# VmHWM of the process is ~6 MB in the steady state, and setting the VM size
# soft limit below that results in process termination. On the other hand,
# VmPeak points to somewhat higher value (~200 MB), and if we specify a soft
# limit lower than that, while not causing process termination, it results in
# memory allocation errors for actions like `ls` command.
# Given that, we choose to set a high value of 1 GB as the soft limit here.
# TODO(b/164936284): Specify a lower limit after improving mount-passthrough.
limit as 1000000000 unlimited

expect fork

env SOURCE=/home/chronos/user/MyFiles
env DEST=/run/arcvm/media/MyFiles
env UMASK=007
env ANDROID_ROOT_UID=0
env ANDROID_EXTERNAL_STORAGE_GID=1077

pre-start exec nsenter --mount=/run/namespaces/mnt_concierge --no-fork \
  -- mkdir -p "${DEST}"

exec nsenter --mount=/run/namespaces/mnt_concierge --no-fork \
  -- /usr/bin/systemd-cat -t "${UPSTART_JOB}" \
     mount-passthrough-jailed "${SOURCE}" "${DEST}" "${UMASK}" \
     "${ANDROID_ROOT_UID}" "${ANDROID_EXTERNAL_STORAGE_GID}" "full"

post-stop script
  # Termination by SIGKILL can result in a stale mount which needs clean-up.
  nsenter --mount=/run/namespaces/mnt_concierge --no-fork \
    -- umount "${DEST}" || true
end script
