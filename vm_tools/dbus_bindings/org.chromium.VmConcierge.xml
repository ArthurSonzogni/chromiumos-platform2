<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
 "http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">
<!--
  Copyright 2023 The ChromiumOS Authors
  Use of this source code is governed by a BSD-style license that can be
  found in the LICENSE file.
  -->
<!--
  Configuration for /chromeos-dbus-bindings/.
-->
<node name="/org/chromium/VmConcierge"
      xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">
  <interface name="org.chromium.VmConcierge">
    <method name="AddGroupPermissionMesa">
      <tp:docstring>
        Adds group permission to directories created by mesa for a specified VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="normal" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::AddGroupPermissionMesaRequest"/>
      </arg>
    </method>
    <method name="AdjustVm">
      <tp:docstring>
        Adjusts parameters of a given VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::AdjustVmRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::AdjustVmResponse"/>
        <tp:docstring>
          Returns success==true when successful, see failure_reason when not.
        </tp:docstring>
      </arg>
    </method>
    <method name="AggressiveBalloon">
      <tp:docstring>
        Inflate balloon in a vm until perceptible processes in the guest are
        tried to kill.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="async" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::AggressiveBalloonRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::AggressiveBalloonResponse"/>
      </arg>
    </method>
    <method name="ArcVmCompleteBoot">
      <tp:docstring>
        Completes the boot of an ARCVM VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ArcVmCompleteBootRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ArcVmCompleteBootResponse"/>
        <tp:docstring>
          Returns result==ArcVmCompleteBootResult::SUCCESS when successful.
        </tp:docstring>
      </arg>
    </method>
    <method name="AttachNetDevice">
      <tp:docstring>
        Attaches a net tap device to a VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::AttachNetDeviceRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::AttachNetDeviceResponse"/>
        <tp:docstring>
          Returns success==true when successful, see failure_reason when not.
        </tp:docstring>
      </arg>
    </method>
    <method name="AttachUsbDevice">
      <tp:docstring>
        Attaches a USB device to a VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::AttachUsbDeviceRequest"/>
      </arg>
      <arg type="h" name="fd" direction="in">
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::AttachUsbDeviceResponse"/>
        <tp:docstring>
          Returns success==true when successful, see reason when not.
        </tp:docstring>
      </arg>
    </method>
    <method name="CancelDiskImageOperation">
      <tp:docstring>
        Cancels a disk image operation.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::CancelDiskImageRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::CancelDiskImageResponse"/>
        <tp:docstring>
          Returns success==true when successful, see failure_reason when not.
        </tp:docstring>
      </arg>
    </method>
    <method name="CreateDiskImage">
      <tp:docstring>
        Creates a disk image.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="raw" />
      <!--
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::CreateDiskImageRequest"/>
      </arg>
      <arg type="h" name="in_fd" direction="in" optional="true">
        <tp:docstring>
          fd for storage for STORAGE_CRYPTOHOME_PLUGINVM case.
        </tp:docstring>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::CreateDiskImageResponse"/>
        <tp:docstring>
          Returns success==true when successful, see failure_reason when not.
        </tp:docstring>
      </arg>
      -->
    </method>
    <method name="DestroyDiskImage">
      <tp:docstring>
        Destroys a disk image.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::DestroyDiskImageRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::DestroyDiskImageResponse"/>
        <tp:docstring>
          Returns success==true when successful, see failure_reason when not.
        </tp:docstring>
      </arg>
    </method>
    <method name="DetachNetDevice">
      <tp:docstring>
        Detaches a net tap device from a VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::DetachNetDeviceRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::DetachNetDeviceResponse"/>
        <tp:docstring>
          Returns success==true when successful, see failure_reason when not.
        </tp:docstring>
      </arg>
    </method>
    <method name="DetachUsbDevice">
      <tp:docstring>
        Detaches a USB device from a VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::DetachUsbDeviceRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::DetachUsbDeviceResponse"/>
        <tp:docstring>
          Returns success==true when successful, see reason when not.
        </tp:docstring>
      </arg>
    </method>
    <method name="DiskImageStatus">
      <tp:docstring>
        Checks status of a disk image operation.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::DiskImageStatusRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::DiskImageStatusResponse"/>
        <tp:docstring>
          Please check status and failure_reason.
        </tp:docstring>
      </arg>
    </method>
    <method name="ExportDiskImage">
      <tp:docstring>
        Exports a VM disk image.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="raw" />
      <!--
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ExportDiskImageRequest"/>
      </arg>
      <arg type="h" name="storage_fd" direction="in">
        <tp:docstring>
          File descriptor to fill with disk image data.
        </tp:docstring>
      </arg>
      <arg type="h" name="digest_fd" direction="in" optional="true">
        <tp:docstring>
          File descriptor to write the SHA256 digest of the compressed image to.
        </tp:docstring>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ExportDiskImageResponse"/>
        <tp:docstring>
          Please check status and failure_reason.
        </tp:docstring>
      </arg>
      -->
    </method>
    <method name="GetDnsSettings">
      <tp:docstring>
        Gets DNS info.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::DnsSettings"/>
        <tp:docstring>
          Always successful.
        </tp:docstring>
      </arg>
    </method>
    <method name="GetVmEnterpriseReportingInfo">
      <tp:docstring>
        Gets VM info specific to enterprise reporting.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::GetVmEnterpriseReportingInfoRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::GetVmEnterpriseReportingInfoResponse"/>
        <tp:docstring>
          Returns success==true when successful, see failure_reason when not.
        </tp:docstring>
      </arg>
    </method>
    <method name="GetVmGpuCachePath">
      <tp:docstring>
        Gets VM's GPU cache path. Returns dbus error on failure.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="normal" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::GetVmGpuCachePathRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::GetVmGpuCachePathResponse"/>
      </arg>
    </method>
    <method name="GetVmInfo">
      <tp:docstring>
        Gets VM info.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::GetVmInfoRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::GetVmInfoResponse"/>
        <tp:docstring>
          Returns success==true when successful.
        </tp:docstring>
      </arg>
    </method>
    <method name="GetVmLaunchAllowed">
      <tp:docstring>
        Get if allowed to launch VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="response" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::GetVmLaunchAllowedRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::GetVmLaunchAllowedResponse"/>
      </arg>
    </method>
    <method name="GetVmLogs">
      <tp:docstring>
        Gets VM logs.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="normal" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::GetVmLogsRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::GetVmLogsResponse"/>
      </arg>
    </method>
    <method name="GetVmMemoryManagementKillsConnection">
      <tp:docstring>
        Returns an open FD to the VM Memory Management Service kills server.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::GetVmMemoryManagementKillsConnectionRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::GetVmMemoryManagementKillsConnectionResponse"/>
      </arg>
      <arg type="ah" name="out_fd" direction="out">
        <tp:docstring>
          On success, contains a single FD for communication with the server. On
          failure, the array will be empty (D-Bus does not support sending invalid
          fds).
        </tp:docstring>
      </arg>
    </method>
    <method name="ImportDiskImage">
      <tp:docstring>
        Imports a disk image.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ImportDiskImageRequest"/>
      </arg>
      <arg type="h" name="in_fd" direction="in">
        <tp:docstring>
          fd for image to import.
        </tp:docstring>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ImportDiskImageResponse"/>
        <tp:docstring>
          See status and failure_reason for result.
        </tp:docstring>
      </arg>
    </method>
    <method name="InstallPflash">
      <tp:docstring>
        Installs the Pflash image associated with a VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::InstallPflashRequest"/>
      </arg>
      <arg type="h" name="plash_src_fd" direction="in">
        <tp:docstring>
          fd for Pflash image.
        </tp:docstring>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::InstallPflashResponse"/>
        <tp:docstring>
          Returns success==true when successful, failure_reason is set on failure.
        </tp:docstring>
      </arg>
    </method>
    <method name="ListUsbDevices">
      <tp:docstring>
        Lists USB devices.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ListUsbDeviceRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ListUsbDeviceResponse"/>
        <tp:docstring>
          Returns success==true when successful.
        </tp:docstring>
      </arg>
    </method>
    <method name="ListVmDisks">
      <tp:docstring>
        Lists existing disk images.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ListVmDisksRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ListVmDisksResponse"/>
        <tp:docstring>
          Returns success==true when successful.
        </tp:docstring>
      </arg>
    </method>
    <method name="ListVms">
      <tp:docstring>
        Lists Vms.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ListVmsRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ListVmsResponse"/>
        <tp:docstring>
          Returns success==true when successful, failure_reason is set on failure.
        </tp:docstring>
      </arg>
    </method>
    <method name="ReclaimVmMemory">
      <tp:docstring>
        Requests to reclaim memory of a given VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="async" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ReclaimVmMemoryRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ReclaimVmMemoryResponse"/>
        <tp:docstring>
          Returns success==true when successful, failure_reason is set on failure.
        </tp:docstring>
      </arg>
    </method>
    <method name="ResizeDiskImage">
      <tp:docstring>
        Resizes a disk image. Can return asynchronously.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ResizeDiskImageRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ResizeDiskImageResponse"/>
        <tp:docstring>
          status is DISK_STATUS_RESIZED when successful. status may be
          DISK_STATUS_IN_PROGRESS when resize is still ongoing.
        </tp:docstring>
      </arg>
    </method>
    <method name="ResumeVm">
      <tp:docstring>
        Resumes a VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ResumeVmRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ResumeVmResponse"/>
        <tp:docstring>
          Returns success==true when successful, failure_reason is set on failure.
        </tp:docstring>
      </arg>
    </method>
    <method name="SetBalloonTimer">
      <tp:docstring>
        Updates balloon timer.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::SetBalloonTimerRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::SetBalloonTimerResponse"/>
        <tp:docstring>
          Returns success==true when successful.
        </tp:docstring>
      </arg>
    </method>
    <method name="SetVmCpuRestriction">
      <tp:docstring>
        Set VM's CPU restriction state.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::SetVmCpuRestrictionRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::SetVmCpuRestrictionResponse"/>
        <tp:docstring>
          Returns success==true when successful.
        </tp:docstring>
      </arg>
    </method>
    <method name="StartArcVm">
      <tp:docstring>
        Starts ARCVM VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="async" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::StartArcVmRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::StartVmResponse"/>
        <tp:docstring>
          Returns success==true when successful, failure_reason is set on failure.
        </tp:docstring>
      </arg>
    </method>
    <method name="StartPluginVm">
      <tp:docstring>
        Starts Plugin VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="async" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::StartPluginVmRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::StartVmResponse"/>
        <tp:docstring>
          Returns success==true when successful, failure_reason is set on failure.
        </tp:docstring>
      </arg>
    </method>
    <method name="StartVm">
      <tp:docstring>
        Starts VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="raw" />
      <!--
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::StartVmRequest"/>
      </arg>
      <arg type="h" name="fd" direction="in" optional="true">
        <tp:docstring>
          File descriptors.
        </tp:docstring>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::StartVmResponse"/>
        <tp:docstring>
          Returns success==true when successful, failure_reason is set on failure.
        </tp:docstring>
        </arg>
        -->
    </method>
    <method name="StopAllVms">
      <tp:docstring>
        Stops all running VMs.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
    </method>
    <method name="StopVm">
      <tp:docstring>
        Stops VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::StopVmRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::StopVmResponse"/>
        <tp:docstring>
          Returns success==true when successful, failure_reason is set on failure.
        </tp:docstring>
      </arg>
    </method>
    <method name="SuspendVm">
      <tp:docstring>
        Suspends a VM.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::SuspendVmRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::SuspendVmResponse"/>
        <tp:docstring>
          Returns success==true when successful, failure_reason is set on failure.
        </tp:docstring>
      </arg>
    </method>
    <method name="SwapVm">
      <tp:docstring>
        Handles a request to change VM swap state.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="async" />
      <arg type="ay" name="request" direction="in">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::SwapVmRequest"/>
      </arg>
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::SwapVmResponse"/>
        <tp:docstring>
          Returns success==true when successful, failure_reason is set on failure.
        </tp:docstring>
      </arg>
    </method>
    <method name="SyncVmTimes">
      <tp:docstring>
         Updates all VMs' times to the current host time.
      </tp:docstring>
      <annotation name="org.chromium.DBus.Method.Kind" value="simple" />
      <arg type="ay" name="response" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::SyncVmTimesResponse"/>
        <tp:docstring>
          Returns failures for the count of failures and failure_reason for reasons.
        </tp:docstring>
      </arg>
    </method>

    <signal name="DiskImageProgress">
      <tp:docstring>
        Signaled by Concierge after an ImportDiskImage
        call has been made and an update about the status of the import
        is available.
      </tp:docstring>
      <arg name="signal" type="ay" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::DiskImageStatusResponse"/>
      </arg>
    </signal>
    <signal name="VmGuestUserlandReadySignal">
      <tp:docstring>
        Indicates VM started up and guest user space system application is ready
        for communication. Useful for detecting when to stop boosting guest OS
        for short-term boot performance.
      </tp:docstring>
      <arg name="signal" type="ay" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::VmGuestUserlandReadySignal"/>
        <tp:docstring>
          Specifies the context of what level of guest userland is up and running.
        </tp:docstring>
      </arg>
    </signal>
    <signal name="DnsSettingsChanged">
      <tp:docstring>
        Signal to let Parallels dispatcher aware of DNS settings change.
      </tp:docstring>
      <arg name="signal" type="ay" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::DnsSettings"/>
      </arg>
    </signal>
    <signal name="VmStartedSignal">
      <tp:docstring>
        Indicates that the concierge successfully launched crosvm as its child
        process. If you want guest userland state use VmGuestUserlandReadySignal.
      </tp:docstring>
      <arg name="signal" type="ay" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::VmStartedSignal"/>
      </arg>
    </signal>
    <signal name="VmStartingUpSignal">
      <tp:docstring>
        Indicates a new vm is starting so logging can be captured as early as
        possible.
      </tp:docstring>
      <arg name="signal" type="ay" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::ExtendedVmInfo"/>
      </arg>
    </signal>
    <signal name="VmStoppedSignal">
      <tp:docstring>
        Indicates VM is stopped.
      </tp:docstring>
      <arg name="signal" type="ay" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::VmStoppedSignal"/>
      </arg>
    </signal>
    <signal name="VmStoppingSignal">
      <tp:docstring>
        Indicates VM is stopping.
      </tp:docstring>
      <arg name="signal" type="ay" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::VmStoppingSignal"/>
      </arg>
    </signal>
    <signal name="VmSwappingSignal">
      <tp:docstring>
        Indicates a VM is starting memory swap out so the receiver can
        expect the VM will experience a transitional jank.
      </tp:docstring>
      <arg name="signal" type="ay" direction="out">
        <annotation name="org.chromium.DBus.Argument.ProtobufClass"
                    value="vm_tools::concierge::VmSwappingSignal"/>
      </arg>
    </signal>
  </interface>
</node>
