// Copyright 2022 The ChromiumOS Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module ash.cros_healthd.connectivity.test.common.mojom;

struct Foo {
  enum FooEnum {
    A,
  };
  FooEnum e;
  int32 n;
  string s;
  string? opt_s;
};

struct Bar {
  int32 n;
};

union MyUnion {
  Foo foo;
  Bar? bar;
};

enum MapKey {
  A,
  B,
  C,
};

struct CommonStruct {
  int32 num;
  string str;
  string? opt_str;
  array<int32> arr_int;
  array<int32>? arr_int_opt;
  array<MyUnion> foos;
  array<MyUnion?> foos_opt;
  array<MyUnion>? foos_opt_arr;
  map<int32, int32> m1;
  map<MapKey, int32> m2;
  map<MapKey, MyUnion> m3;
  map<MapKey, MyUnion>? m4;
  handle h;
  handle? h_opt;
};

interface FooInterface {
  enum FooEnum {
    A,
  };
  Foo(FooEnum a);
};

struct TestArr1 {
  array<MyUnion> arr;
};

struct TestArr2 {
  array<MyUnion?> arr;
};

struct TestArr3 {
  array<MyUnion>? arr;
};

struct TestMap1 {
  map<int32, MyUnion?> m;
};

struct TestMap2 {
  map<MapKey, MyUnion?> m;
};

struct TestMap3 {
  map<MapKey, int32> m;
};

struct TestMap4 {
  map<MapKey, int32>? m;
};

struct TypeMapping {
  int32 n;
};

struct TestTypeMapping {
  TypeMapping tm;
};
