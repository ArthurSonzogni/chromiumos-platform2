# Copyright 2019 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//common-mk/pkg_config.gni")
import("//common-mk/proto_library.gni")

pkg_config("libgrpc_async_adapter_pkg_deps") {
  pkg_deps = [ "libchrome-${libbase_ver}" ]
}

# Library that adopts gRPC core async interface to a libchrome-friendly one.
source_set("libgrpc_async_adapter") {
  configs += [ ":libgrpc_async_adapter_pkg_deps" ]
  libs = [ "grpc" ]
  sources = [
    "async_grpc_client.cc",
    "async_grpc_constants.cc",
    "async_grpc_server.cc",
    "grpc_completion_queue_dispatcher.cc",
    "rpc_state.cc",
    "time_util.cc",
  ]
}

if (use.test) {
  pkg_config("libgrpc_async_adapter_test_rpcs_pkg_deps") {
    pkg_deps = [
      "grpc++",
      "protobuf",
    ]
  }

  proto_library("libgrpc_async_adapter_test_rpcs_protolib") {
    configs = [ ":libgrpc_async_adapter_test_rpcs_pkg_deps" ]
    gen_grpc = true
    proto_in_dir = "."
    proto_out_dir = "include"
    sources = [ "test_rpcs.proto" ]
  }

  executable("libgrpc_async_adapter_test") {
    configs += [
      "//common-mk:test",
      ":libgrpc_async_adapter_pkg_deps",
    ]
    deps = [
      ":libgrpc_async_adapter",
      ":libgrpc_async_adapter_test_rpcs_protolib",
      "//common-mk/testrunner:testrunner",
    ]
    sources = [
      "async_grpc_client_server_test.cc",
      "async_grpc_server_test.cc",
      "grpc_completion_queue_dispatcher_test.cc",
    ]
  }
}
