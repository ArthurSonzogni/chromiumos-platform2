# Copyright 2020 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# rseq should be first due to frequency and purpose to decrease nptl latency
rseq: 1

bind: 1
brk: 1
capget: 1
chdir: 1
chroot: 1
clock_gettime: 1
clock_nanosleep: 1
clone: 1
close: 1
connect: 1
dup3: 1
dup: 1
epoll_create1: 1
epoll_ctl: 1
epoll_pwait: 1
eventfd2: 1
execve: 1
exit: 1
exit_group: 1
faccessat2: 1
faccessat: 1
fallocate: 1
fchdir: 1
fchownat: 1
fcntl: 1
flock: 1
fstat: 1
fstatfs: 1
ftruncate: 1
futex: 1
getcpu: 1
getdents64: 1
getegid: 1
geteuid: 1
getgid: 1
getpid: 1
getppid: 1
getrandom: arg2 in ~GRND_RANDOM
getresgid: 1
getresuid: 1
getsockname: 1
gettid: 1
# Used occasionally by libevent discovered in production use (b/166445013)
gettimeofday: 1
getuid: 1
# ioctl values:
#   0x40048001 == _IOC(_IOC_WRITE, 0x80, 0x1, 0x4)
#   0x40088026 == _IOC(_IOC_WRITE, 0x80, 0x26, 0x8)
#   0x40108003 == _IOC(_IOC_WRITE, 0x80, 0x3, 0x10)
#   0x40108014 == _IOC(_IOC_WRITE, 0x80, 0x14, 0x10)
#   0x40208018 == _IOC(_IOC_WRITE, 0x80, 0x18, 0x20)
#   0x4018800e == _IOC(_IOC_WRITE, 0x80, 0xe, 0x18)
#   0x80048011 == _IOC(_IOC_READ, 0x80, 0x11, 0x4)
#   0xc0018036 == _IOC(_IOC_READ|_IOC_WRITE, 0x80, 0x36, 0x1)
#   0xc0048000 == _IOC(_IOC_READ|_IOC_WRITE, 0x80, 0, 0x4)
#   0xc0186440 == _IOC(_IOC_READ|_IOC_WRITE, 0x64, 0x40, 0x18)
#   0xc0208005 == _IOC(_IOC_READ|_IOC_WRITE, 0x80, 0x5, 0x20)
#   0x40086409 == DRM_IOCTL_GEM_CLOSE
#   0xc00c644a == DRM_IOCTL_MSM_SUBMITQUEUE_NEW
#   0xc00c6448 == DRM_IOCTL_MSM_GEM_MADVISE or DRM_IOCTL_PANFROST_MADVISE
#   0xc0106442 == DRM_IOCTL_AMDGPU_CTX or DRM_IOCTL_ETNAVIV_GEM_NEW or
#                 DRM_IOCTL_LIMA_GEM_INFO or DRM_IOCTL_MSM_GEM_NEW or
#                 DRM_IOCTL_V3D_CREATE_BO or DRM_IOCTL_VC4_WAIT_BO
#   0xc018644c == DRM_IOCTL_VC4_PERFMON_CREATE
#   0xc010640c == DRM_IOCTL_GET_CAP
#   0xc0186443 == DRM_IOCTL_AMDGPU_BO_LIST or DRM_IOCTL_MSM_GEM_INFO
#   0xc0106440 == DRM_IOCTL_ETNAVIV_GET_PARAM or DRM_IOCTL_EXYNOS_GEM_CREATE or
#                 DRM_IOCTL_LIMA_GET_PARAM or DRM_IOCTL_MSM_GET_PARAM or
#                 DRM_IOCTL_OMAP_GET_PARAM or DRM_IOCTL_TEGRA_GEM_CREATE
#   0xc0406400 == DRM_IOCTL_VERSION
#   0x4004644b == DRM_IOCTL_MSM_SUBMITQUEUE_CLOSE
#   0xc04064a0 == DRM_IOCTL_MODE_GETRESOURCES
#   0xc04064aa == DRM_IOCTL_MODE_GETPROPERTY
#   0xc05064a7 == DRM_IOCTL_MODE_GETCONNECTOR
#   0xc01464a6 == DRM_IOCTL_MODE_GETENCODER
#   0xc06864a1 == DRM_IOCTL_MODE_GETCRTC
#   0xc01064ac == DRM_IOCTL_MODE_GETPROPBLOB
ioctl: arg1 == BLKGETSIZE64 || arg1 == SIOCSIFFLAGS || arg1 == BLKSSZGET || \
       arg1 == SIOCGIFFLAGS || arg1 == TCGETS || arg1 == 0x40048001 || \
       arg1 == 0x40108003 || arg1 == 0x40108014 || arg1 == 0x40208018 || \
       arg1 == 0x80048011 || arg1 == 0xc0048000 || arg1 == 0xc0208005 || \
       arg1 == 0x40086409 || arg1 == 0xc00c644a || arg1 == 0xc00c6448 || \
       arg1 == 0xc0106442 || arg1 == 0xc018644c || arg1 == 0xc010640c || \
       arg1 == 0xc0186443 || arg1 == 0xc0106440 || arg1 == 0xc0406400 || \
       arg1 == 0x4004644b || arg1 == 0xc04064a0 || arg1 == 0xc04064aa || \
       arg1 == 0xc05064a7 || arg1 == 0xc01464a6 || arg1 == 0xc06864a1 || \
       arg1 == 0xc0186440 || arg1 == 0xc01064ac || arg1 == 0x40088026 || \
       arg1 == 0xc0018036 || arg1 == 0x4018800e
kcmp: 1
kill: 1
lseek: 1
madvise: 1
memfd_create: 1
mkdirat: 1
mmap: arg2 in ~PROT_EXEC || arg2 in ~PROT_WRITE
mount: 1
mprotect: arg2 in ~PROT_EXEC || arg2 in ~PROT_WRITE
# Used occasionally by glibc discovered in production use (b/167617776)
mremap: 1
munmap: 1
nanosleep: 1
newfstatat: 1
openat: 1
pipe2: 1
pivot_root: 1
ppoll: 1
prctl: arg0 == PR_SET_SECCOMP || arg0 == PR_SET_NO_NEW_PRIVS || \
       arg0 == PR_SET_NAME
pread64: 1
prlimit64: 1
process_vm_readv: 1
read: 1
readlinkat: 1
recvmsg: 1
restart_syscall: 1
rt_sigaction: 1
rt_sigprocmask: 1
rt_sigreturn: 1
sched_getaffinity: 1
sched_getattr: 1
sched_setaffinity: 1
sched_setattr: 1
sched_setscheduler: 1
sched_yield: 1
sendmsg: 1
sendto: 1
set_robust_list: 1
set_tid_address: 1
setgroups: 1
setpriority: 1
setresgid: 1
setresuid: 1
setsockopt: arg1 == SOL_SOCKET && arg2 == SO_ATTACH_FILTER || \
            arg1 == SOL_SOCKET && arg2 == SO_PASSCRED
shutdown: 1
signalfd4: 1
# Use hex value 0xF to substitute the constant: NETLINK_KOBJECT_UEVENT
socket: arg0 == AF_UNIX || arg0 == AF_NETLINK && arg2 == 0xF
socketpair: 1
statfs: 1
sysinfo: 1
tgkill: 1
umount2: 1
uname: 1
unlinkat: 1
unshare: 1
wait4: 1
write: 1
clock_getres: 1
