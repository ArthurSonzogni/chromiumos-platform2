// Copyright (c) 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

option optimize_for = LITE_RUNTIME;

package cryptohome;

import "key_enums.proto";

message KeyParameters {
  message KeyAuthorization {
    required string label = 1;
    // At present, the only signature authorized privilege is
    // a superviser user key which will can replace itself iff
    // the new key and the new revision have a valid signature
    // (and the revision is not old).
    optional bytes authorization_signature = 3;
  }
  optional KeyAuthorization auth = 1;

  // Used when a key is being added, even if it is being
  // clobbered as long as the authorizing key is not the same.
  message KeyAddition {
    required KeyType type = 1;
    required string label = 2;
    optional KeyPrivileges
      privs = 3 [default=DEFAULT];
    optional KeyAuthorizationType
      authorization_type = 4;
    optional bytes authorization_key = 5;
  }
  optional KeyAddition add = 2;

  // Used when a key is updating itself.  If another key is being used,
  // it should be a clobbering KeyAddition.
  message KeyUpdate {
    // These fields only need to be specified if an explicit change is required.
    optional string label = 1;
    // The new_revision must be larger than the current revision.
    // Revisions are not incremented automatically.
    optional int64 new_revision = 2;
  }
  optional KeyUpdate update = 3;
}
