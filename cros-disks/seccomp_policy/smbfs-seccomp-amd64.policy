# Copyright 2020 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# rseq should be first due to frequency and purpose to decrease nptl latency
rseq: 1

access: 1
alarm: 1
faccessat: 1
faccessat2: 1
arch_prctl: 1
bind: 1
brk: 1
chdir: 1
clock_getres: 1
clock_gettime: 1
clone: 1
close: 1
connect: 1
creat: 1
dup: 1
dup2: 1
epoll_create1: 1
epoll_create: 1
epoll_ctl: 1
epoll_wait: 1
eventfd2: 1
execve: 1
exit: 1
exit_group: 1
fallocate: 1
fcntl: 1
fdatasync: 1
fstat: 1
fstatfs: 1
ftruncate: 1
futex: 1
getdents: 1
getdents64: 1
getegid: 1
geteuid: 1
getgid: 1
getpeername: 1
getpid: 1
getrandom: 1
getresgid: 1
getresuid: 1
getrlimit: 1
getsockname: 1
getsockopt: 1
gettid: 1
gettimeofday: 1
getuid: 1
# ioctl: arg1 == TCGETS || arg1 == TCSETSF ||
#        arg1 == FIONREAD || arg1 == FIONBIO ||
#        arg1 == SIOCGIFINDEX || arg1 == SIOCETHTOOL
ioctl: arg1 == 0x5401 || arg1 == 0x5404 || arg1 == 0x541b || \
       arg1 == 0x5421 || arg1 == 0x8933 || arg1 == 0x8946
kill: 1
lseek: 1
lstat: 1
madvise: 1
memfd_create: 1
mkdir: 1
mlock: 1
mmap: arg2 in ~PROT_EXEC || arg2 in ~PROT_WRITE
mprotect: arg2 in ~PROT_EXEC || arg2 in ~PROT_WRITE
mremap: 1
munlock: 1
munmap: 1
newfstatat: 1
open: 1
openat: 1
pipe: 1
pipe2: 1
poll: 1
prctl: arg0 == PR_SET_NAME || arg0 == PR_CAPBSET_READ
pread64: 1
prlimit64: arg2 == 0 && arg3 != 0
pwrite64: 1
read: 1
recvfrom: 1
recvmsg: 1
rename: 1
restart_syscall: 1
rmdir: 1
rt_sigaction: 1
rt_sigprocmask: 1
rt_sigreturn: 1
rt_sigsuspend: 1
sendmsg: 1
sendmmsg: 1
sendto: 1
setgroups: 1
setpriority: 1
setresgid: 1
setresuid: 1
setsid: 1
setsockopt: 1
set_robust_list: 1
set_tid_address: 1
signalfd4: 1
# Samba uses the getifaddrs() libc function to enumerate network interfaces,
# which is implemented using netlink in glibc:
# https://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/ifaddrs.c;hb=d93769405996dfc11d216ddbe415946617b5a494#l258
#       arg0 == AF_NETLINK && arg2 == NETLINK_ROUTE
socket: arg0 == AF_UNIX || arg0 == AF_INET || arg0 == AF_INET6 || \
        arg0 == AF_NETLINK && arg2 == 0
socketpair: 1
stat: 1
tgkill: 1
umask: 1
uname: 1
unlink: 1
wait4: 1
write: 1
writev: 1
