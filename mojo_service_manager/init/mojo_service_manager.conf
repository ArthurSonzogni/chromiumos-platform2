# Copyright 2022 The ChromiumOS Authors.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description     "Chrome OS mojo service manager"
author          "chromium-os-dev@chromium.org"

# Stop conditions for this job are deliberately omitted: service manager clients
# routinely terminate with crashes when service manager terminates before
# them. Ordering process termination with Upstart is hard, so we simply
# leave service manager running to ensure the rest of the system can shut
# down cleanly. Also see the post-stop script below that reboots the
# system in response to service manager exiting unexpectedly.
start on starting boot-services

# TODO(b/233325069): Remove this respawn logic after service manager is stable.
respawn
# If the job respawns 3 times in 10 seconds, stop trying.
respawn limit 3 10

oom score never

tmpfiles /usr/lib/tmpfiles.d/on-demand/mojo_service_manager.conf

exec minijail0 -u mojo-service-manager -g mojo-service-manager -G \
    --profile=minimalistic-mountns --uts -l -p -N \
    -k 'tmpfs,/run,tmpfs,MS_NOSUID|MS_NODEV|MS_NOEXEC' \
    -b /run/mojo,/run/mojo,1 \
    -b /usr/local \
    -S /usr/share/policy/mojo_service_manager.policy \
    -- /usr/bin/mojo_service_manager

post-stop script
  # TODO(b/233325069): Do reboot after service manager is stable.
  # The system is unusable if service manager crashes; the various daemons
  # that were connected to it won't re-register their service names, so
  # they won't be able to talk to each other. Instead of attempting to
  # respawn service manager, reboot the system to get back to a same state.
  #
  # Add the reboot logic after we are ready to launch service manager.
  logger -t "$UPSTART_JOB" "mojo service manager exited unexpectedly"
end script
