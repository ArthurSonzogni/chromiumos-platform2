#!/usr/bin/python

# Copyright (c) 2013 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import dbus
import logging
import sys

import shill_proxy

def main():
    """
    Ask shill to connect to a WiFi service, and block until we connect
    successfully or fail for the first time.
    """


    if len(sys.argv) < 2:
        logging.error('Usage: %s <ssid> [passphrase] [security]' % sys.argv[0])
        logging.error('    |security| defaults to "none"')
        logging.error('    when |passphrase| is given without |security|, '
                      '|security| defaults to "psk"')
        return

    logging.info('Attempting to connect service %s' % sys.argv[1])
    shill = shill_proxy.ShillProxy()
    ssid = sys.argv[1]
    security = 'none'
    passphrase = ''
    save_credentials = False
    if len(sys.argv) > 2:
        passphrase = sys.argv[2]
        security = 'psk'
    if len(sys.argv) > 3:
        security = sys.argv[3]

    result = shill.connect_to_wifi_network(ssid,
                                           security,
                                           passphrase,
                                           save_credentials)
    (successful,
     discovery_time,
     association_time,
     configuration_time,
     reason) = result
    if successful:
        logging.info('Operation succeeded.')
    else:
        logging.info('Operation failed. (%s)' % reason)
    logging.debug('Discovery time: %f.' % discovery_time)
    logging.debug('Association time: %f.' % association_time)
    logging.debug('Configuration time: %f.' % configuration_time)
    return successful

if __name__ == '__main__':
    logging.basicConfig(level=logging.DEBUG,
                        format='%(message)s')
    if not main():
      sys.exit(1)
