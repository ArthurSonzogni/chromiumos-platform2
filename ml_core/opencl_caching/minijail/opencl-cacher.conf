% minijail-config-file v0

# Minijail settings:
# -i exit immediately after fork
# -n Set no_new_privs
# -u run as user ml-core
# -g run as group ml-core
# -G to be in video group to access /dev/video*.
# --profile=minimalistic-mountns to set up a mostly empty pivot root
#
# Namespaces:
# -N enter new cgroup namespace
# -p enter new pid namespace
# -l enter new IPC namespace
# -e enter new network namespace
# -v enter new mount namespace
#
# Mounts:
# -Kslave to propagate mount events (like DLC installation)
# -b /dev/dri for GPU access
# -k to mount tmpfs at /run
# -k to mount tmpfs at /sys
# -k to mount tmpfs at /var
# -k to mount /var/lib/ml_core/opencl_cache for storage (writable)
# -k to mount /run/image-loader for DLC
# -k to mount /run/camera to check for force_enable_effects file
# -b /sys/dev/char, /sys/devices to perform device enumeration
# -b /run/dbus for DBus

i
n
u = ml-core
g = ml-core
G
N
p
l
e
ns-mount
K = slave
profile = minimalistic-mountns
bind-mount = /dev/dri
bind-mount = /usr/share/cros-camera/libfs
mount = tmpfs,/run,tmpfs,MS_NOSUID|MS_NODEV|MS_NOEXEC
mount = tmpfs,/sys,tmpfs,MS_NODEV|MS_NOEXEC|MS_NOSUID,mode=755
mount = tmpfs,/var,tmpfs,MS_NOSUID|MS_NODEV|MS_NOEXEC
mount = /var/lib/ml_core/opencl_cache,/var/lib/ml_core/opencl_cache,none,MS_BIND|MS_REC
mount = /run/imageloader,/run/imageloader,none,MS_BIND|MS_REC|MS_NOSUID|MS_NODEV
mount = /run/camera,/run/camera,none,MS_BIND|MS_REC|MS_NOSUID|MS_NODEV
bind-mount = /sys/dev/char
bind-mount = /sys/devices
bind-mount = /run/dbus
S = /usr/share/policy/opencl-cacher-amd64.policy
