# Copyright 2022 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//common-mk/mojom_bindings_generator.gni")
import("//common-mk/pkg_config.gni")

group("all") {
  deps = [
    ":install_headers",
    ":install_minijail_conf",
    ":install_tmpfiles",
    ":libcros_ml_core",
    ":maybe_install_dev_lib",
  ]
  if (use.camera_feature_effects) {
    deps += [ "//ml_core/opencl_caching:all" ]
  }

  # Need to do always, as some deps are for clients.
  deps += [ ":unittest_deps" ]
  if (use.fuzzer) {
    deps += []
  }
}

pkg_config("target_defaults") {
  pkg_deps = [
    "libbrillo",
    "libchrome",
    "libsession_manager-client",
  ]
}

shared_library("libcros_ml_core") {
  sources = []
  if (use.camera_feature_effects) {
    sources += [
      "effects_pipeline.cc",
      "opencl_caching/utils.cc",
    ]
  }
  configs += [ ":target_defaults" ]
  install_path = "lib"
}

install_config("install_minijail_conf") {
  sources = [ "opencl_caching/minijail/opencl-cacher.conf" ]
  install_path = "minijail_conf"
}

install_config("install_tmpfiles") {
  sources = [ "tmpfiles.d/ml-core.conf" ]
  install_path = "tmpfilesd"
}

# These headers come from the ml-core-headers-*.tar.xz unpacked by the ebuild file.
install_config("install_headers") {
  sources = [
    "effects_pipeline_bindings.h",
    "effects_pipeline_types.h",
  ]

  if (use.local_ml_core_internal) {
    sources += [
      "ica.proto",
      "interface.h",
    ]
  }
  install_path = "/usr/include/ml_core"
}

install_config("maybe_install_dev_lib") {
  sources = []
  if (use.local_ml_core_internal) {
    sources += [ "libcros_ml_core_internal.so" ]
  }
  install_path = "/usr/local/lib64/"
}

# Install lib and test data for unit tests under /build/share/ml_core
install_config("unittest_deps") {
  sources = []

  # Use either local or DLC version of ml-core-internal.
  if (use.local_ml_core_internal) {
    sources += [
      "libcros_ml_core_internal.so",
      "moon_big.jpg",
    ]
  } else if (use.camera_feature_effects && use.internal) {
    # TODO(b/281928456): Investigate a cleaner way to check this condition.
    sources += [ "${sysroot}/build/rootfs/dlc-scaled/ml-core-internal/" +
                 "package/root/libcros_ml_core_internal.so" ]
  }
  install_path = "/build/share/ml_core/"
}
