# Copyright 2015 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description     "Brillo WebServer Daemon"
author          "chromium-os-dev@chromium.org"

start on starting system-services and stopped iptables and stopped ip6tables
stop on stopping system-services
respawn

env WEBSERVD_LOG_LEVEL=0
env WEBSERVD_HTTP_PORT=80
env WEBSERVD_HTTPS_PORT=443
env WEBSERVD_DEBUG=false
# TODO(zqiu): Temporary
env APMANAGER_DHCP_SERVER_PORT=67

pre-start script
  # Add a rule to the firewall to allow HTTP traffic except from the
  # loopback interface (to prevent e.g. Chrome from connecting.)
  # TODO(avakulenko): localhost is left enabled for now for testing...
  #iptables -I INPUT -i lo -p tcp --dport ${WEBSERVD_HTTP_PORT} -j REJECT
  #ip6tables -I INPUT -i lo -p tcp --dport ${WEBSERVD_HTTP_PORT} -j REJECT
  #iptables -I INPUT -i lo -p tcp --dport ${WEBSERVD_HTTPS_PORT} -j REJECT
  #ip6tables -I INPUT -i lo -p tcp --dport ${WEBSERVD_HTTPS_PORT} -j REJECT
  iptables -A INPUT -p tcp --dport ${WEBSERVD_HTTP_PORT} -j ACCEPT
  ip6tables -A INPUT -p tcp --dport ${WEBSERVD_HTTP_PORT} -j ACCEPT
  iptables -A INPUT -p tcp --dport ${WEBSERVD_HTTPS_PORT} -j ACCEPT
  ip6tables -A INPUT -p tcp --dport ${WEBSERVD_HTTPS_PORT} -j ACCEPT

  # TODO(zqiu): Temporary hack for adding firewall rule to accept DHCP traffic
  # on behalf of apmanager. Putting it here instead of in the apmanager upstart
  # script to avoid a race condition when multiple upstart scripts tried to
  # execute iptables command at the same time. Will delete this when the
  # support for runtime firewall hole punching in permission_broker is
  # completed (crbug.com/435400).
  iptables -I INPUT -p udp --dport ${APMANAGER_DHCP_SERVER_PORT} -j ACCEPT
  iptables -I INPUT -i lo -p udp --dport ${APMANAGER_DHCP_SERVER_PORT} -j REJECT

  mkdir -m 0755 -p /var/log/webservd
  chown webservd:webservd /var/log/webservd
end script

exec /usr/bin/webservd \
    --v="${WEBSERVD_LOG_LEVEL}" \
    --http_port="${WEBSERVD_HTTP_PORT}" \
    --https_port="${WEBSERVD_HTTPS_PORT}" \
    --debug="${WEBSERVD_DEBUG}" \

post-stop script
  # Delete the rules we previously added
  iptables -D INPUT -p tcp --dport ${WEBSERVD_HTTP_PORT} -j ACCEPT
  ip6tables -D INPUT -p tcp --dport ${WEBSERVD_HTTP_PORT} -j ACCEPT
  iptables -D INPUT -p tcp --dport ${WEBSERVD_HTTPS_PORT} -j ACCEPT
  ip6tables -D INPUT -p tcp --dport ${WEBSERVD_HTTPS_PORT} -j ACCEPT

  # TODO(zqiu): refer to comments above for adding these rules.
  iptables -D INPUT -p udp --dport ${APMANAGER_DHCP_SERVER_PORT} -j ACCEPT
  iptables -D INPUT -i lo -p udp --dport ${APMANAGER_DHCP_SERVER_PORT} -j REJECT

  # TODO(avakulenko): uncomment below
  #iptables -D INPUT -i lo -p tcp --dport ${WEBSERVD_HTTP_PORT} -j REJECT
  #ip6tables -D INPUT -i lo -p tcp --dport ${WEBSERVD_HTTP_PORT} -j REJECT
  #iptables -D INPUT -i lo -p tcp --dport ${WEBSERVD_HTTPS_PORT} -j REJECT
  #ip6tables -D INPUT -i lo -p tcp --dport ${WEBSERVD_HTTPS_PORT} -j REJECT
end script
