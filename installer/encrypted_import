#!/bin/sh

# Copyright (c) 2013 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

HELP="USAGE: encrypted_import [flags]
This script can either be used to create validation information for a directory
full of files, or to copy files validated with existing information to a
new directory. The caller is expected to create and manage both the source
and target directories as needed, mostly to make sure permissions are handled
correctly.

To create a validation file for a directory:
  encrypted_import /path/from /output/validation

To move files from one directory to another while validating them:
  encrypted_import /path/from /output/validation /path/to

This is intended for safely importing files from the unencrypted to encrypted
portions of the stateful partition.
"

# Die on error
set -e

export LC_ALL=C

generate_validation_information() {
  local from validation

  from="$(readlink -m "$1")"
  validation="$(readlink -m "$2")"

  echo "Create validation for ${from} in ${validation}."

  cd "${from}"
  sha256sum *.crx > "${validation}"
}

copy_with_validation() {
  local from validation to

  from="$(readlink -m "$1")"
  validation="$(readlink -m "$2")"
  to="$(readlink -m "$3")"

  echo "Copy ${from} -> ${to}, validated by ${validation}."

  # Move files into protected temp location for validation.
  local processing
  processing="$(mktemp -d "${to}/import_tmp.XXXXXXXXXX")"
  trap "rm -rf '${processing}'" EXIT

  awk '{ print $2 }' "${validation}" | \
    xargs -i -n 1 cp -- "${from}/{}" "${processing}"

  # Validate the files being imported.
  cd "${processing}"
  sha256sum --check --strict --quiet "${validation}"

  # Move the files we just validated.
  awk '{ print $2 }' "${validation}" | \
    xargs -i -n 1 mv -- "${processing}/{}" "${to}"
}

case "$#" in
"2")
  generate_validation_information "$@"
  ;;
"3")
  copy_with_validation "$@"
  ;;
*)
  echo "${HELP}"
  exit 1
  ;;
esac
