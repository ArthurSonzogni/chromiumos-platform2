#!/bin/sh -u
# Copyright (c) 2010 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# A script to install recovery image from removable media to hard disk.

# Load functions and constants for chromeos-install.
. "$(dirname "$0")/chromeos-common.sh" || exit 1
. /usr/lib/shflags || exit 1

# TODO: replace debug output and auto-shutdown with a friendly UI
# tracked in http://code.google.com/p/chromium-os/issues/detail?id=4769

RECOVERY_LOG=/var/log/recovery.log
TARGET_DEVICE=/dev/sda
STATEFUL_MNT=/mnt/stateful_partition
DEV_PAYLOAD=$STATEFUL_MNT/dev_payload
CUSTOM_INSTALL=$DEV_PAYLOAD/custom_install

# Timestamp log messages
log() {
  echo "$(date): $*" >>$RECOVERY_LOG
}

# Check if target device is ready for installation
check_target_device() {
  if dd if="$1" of=/dev/null bs=512 count=1 2>/dev/null; then
    log "$target_device is ready"
    return 0
  else
    log "$target_device not yet ready"
    return 1
  fi
}

# Wait for target device to be ready before attempting installation
wait_for_device() {
  local target_device=$1
  local count=0

  while true; do
    if check_target_device $target_device; then
      log "About to launch installer"
      return 0
    fi

    if [ $count -eq 10 ]; then
      log "Target device not ready after 10 seconds. Abort recovery"
      return 1
    fi

    log "Waiting for target device to be ready. Sleep 1 second"
    sleep 1
    count=$((count + 1))
  done
}

# Get state of developer switch at power-on time
get_dev_switch_state() {
  # See Firmware High-Level Spec for details on CHSW values
  local chsw_value=$(cat /sys/devices/platform/chromeos_acpi/CHSW)
  log "ACPI CHSW value is $chsw_value"
  if [ $((chsw_value & 32)) -eq 32 ]; then
    log "developer switch bit set to ON at startup"
    echo on
  else
    log "developer switch bit set to OFF at startup"
    echo off
  fi
}

# Install Google payload from USB image
install_chromiumos_payload() {
  log "About to invoke chromeos-install script"
  IS_RECOVERY_INSTALL=1 chromeos-install --run_as_root --yes \
      --payload_image="$1" >>$RECOVERY_LOG 2>&1
  log "Recovery installer completed"

  # Reset TPM
  stop tcsd
  tpmc ppon
  tpmc clear
  tpmc enable
  tpmc activate

  # shut down and power off the device
  log "Shut down device"
  halt
}

# Find a dev image in payload directory to be installed
find_default_image() {
  # Try a few common names, in descending order of precedence
  local image_list="$DEV_PAYLOAD/chromiumos_image.bin \
                    $DEV_PAYLOAD/chromiumos_base_image.bin \
                    $DEV_PAYLOAD/chromiumos_test_image.bin"
  local image_path=

  for img in $image_list; do
    if [ -f "$img" ]; then
      image_path=$img
      break
    fi
  done

  # Turn path into an absolute path
  if [ -z "$image_path" ]; then
    log "No default image found in $DEV_PAYLOAD"
  else
    image_path="$(readlink -f $image_path)"
    log "Default image found at $image_path"
  fi

  echo "$image_path"
}

# Install custom payload from stateful partition "dev_payload" directory
install_custom_payload() {
  # Check if a custom install script is included in the payload directory

  if [ ! -e "$CUSTOM_INSTALL" ]; then
    log "No custom install script found at $CUSTOM_INSTALL. Assume dev image"
    local default_dev_image="$(find_default_image)"
    if [ -f "$default_dev_image" ]; then
      log "Attempt to install dev image from $default_dev_image"
      install_chromiumos_payload "$default_dev_image"
    else
      log "No default dev image found in \"$DEV_PAYLOAD\". Abort install."
    fi
  else
    log "Custom install script found at $CUSTOM_INSTALL. Checking permission"
    if [ -x "$CUSTOM_INSTALL" ]; then
      # TODO(tgao): consider waiting period depending on signatures
      log "Executing custom install script"
      exec $CUSTOM_INSTALL
    else
      log "Error: custom install script is not executable:"
      log "$(ls -lt $CUSTOM_INSTALL)"
    fi
  fi
}

# Launch script to install a new image onto the device
launch_installer_script() {
  if [ ! -e "$STATEFUL_MNT/.dev_recovery" ]; then
    install_chromiumos_payload ""
    exit 0
  fi
  log "Developer recovery boot. Check developer switch position"

  # Verify developer mode switch is ON. Otherwise, exit with an error
  if [ "$(get_dev_switch_state)" = "off" ]; then
    log "Developer switch is OFF. Exit."
    echo "Developer switch OFF. Please use a real recovery image to install \
Chromium OS"
    exit 1
  fi

  log "Developer switch ON. Attempt to install developer payload"
  install_custom_payload
  log "Done processing developer payload"
}

# Main
if [ ! -e "$STATEFUL_MNT/.recovery" ]; then
  exit 0
fi
log "Recovery boot. Check if target device is ready"

if ! wait_for_device $TARGET_DEVICE; then
  log "Timed out waiting for target device $TARGET_DEVICE. Exit."
  exit 1
fi

launch_installer_script
