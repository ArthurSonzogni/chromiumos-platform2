#!/bin/bash

# Copyright (c) 2013 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This script contains unittests for encrypted_import.

# Create a directory to run tests in that will be cleaned up.
TESTDIR=`mktemp -d -t encrypted_import_test.XXXXXXXXXX`
cleanup() {
  # Final Cleanup.
  rm -rf "${TESTDIR}"
}
trap cleanup EXIT

set -e

die() {
  echo "ERROR:  " "$*"
  exit 1
}

# Define various names in the testing dir.

FROM_DIR="${TESTDIR}/src"
TO_DIR="${TESTDIR}/dest"
VALIDATION="${TESTDIR}/validation"

# Clear the test environment, and recreate it with known contents.
setup_from() {
  local from="$1"

  rm -rf "${from}"
  mkdir "${from}"

  # Create files to test with.
  touch "${from}/empty"
  dd if=/dev/zero of="${from}/zero" bs=1K count=10 >& /dev/null
  echo "KNOWN TEXT" > "${from}/text"
}

setup_test() {
  echo
  echo "${1}"

  # Reset from/to directories.
  rm -rf "${TESTDIR}/*"
  setup_from "${FROM_DIR}"
  mkdir -p "${TO_DIR}"

  # Create validation file.
  ./encrypted_import --from "${FROM_DIR}" --validation "${VALIDATION}" ||
      die_notrace "Creating validation file failed."
  verify_validation_file
}

verify_validation_file() {
  [ -e "${VALIDATION}" ] || die_notrace "Validation file not created."

  diff "${VALIDATION}" - << EOF || \
      die "Validation file has unexpected contents."
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855  empty
df724c08965bd130263806c9b2a57cb249bbe6bdec7b22916fe00bf0a022d7d6  text
84ff92691f909a05b224e1c56abb4864f01b4f8e3c854e4bb4c7baf1d3f6d652  zero
EOF
}

verify_full_contents() {
  local clean_dir="${TESTDIR}/clean"

  # Compare against our expected start state.
  setup_from "${clean_dir}"

  diff -r "${clean_dir}" "${TO_DIR}" || die "FROM and TO don't match."
}

verify_no_contents() {
  [ ! -e "${TO_DIR}/*" ] || die "Unexpected contents present."
}

#
# Actual test cases.
#

# Basic success case.
test_simple_copy() {
  setup_test "Running test_simple_copy"

  # Do validated import.
  ./encrypted_import --from "${FROM_DIR}" --validation "${VALIDATION}" \
      --to "${TO_DIR}" || die "Valid Import Failed."
  verify_full_contents
}

# Catch error with modified file.
test_modified_file() {
  setup_test "Running test_modified_file"

  # Modify a file.
  echo "DISTORTED TEXT" > "${FROM_DIR}/text"

  # Do validated import.
  ./encrypted_import --from "${FROM_DIR}" --validation "${VALIDATION}" \
      --to "${TO_DIR}" && die "Bad import succeeded."
  verify_no_contents
}

# Catch error with missing file.
test_missing_file() {
  setup_test "Running test_missing_file"

  # Remove a file.
  rm "${FROM_DIR}/empty"

  # Do validated import.
  ./encrypted_import --from "${FROM_DIR}" --validation "${VALIDATION}" \
      --to "${TO_DIR}" && die "Bad import succeeded."
  verify_no_contents
}

# Verify we ignore a missing file.
test_extra_file() {
  setup_test "Running test_extra_file"

  # Create an extra file. We expect this file to be quietly ignored.
  touch "${FROM_DIR}/malicious"

  # Do validated import.
  ./encrypted_import --from "${FROM_DIR}" --validation "${VALIDATION}" \
      --to "${TO_DIR}" || die "Valid Import Failed."
  verify_full_contents
}

# Run tests
test_simple_copy
test_modified_file
test_missing_file
test_extra_file
