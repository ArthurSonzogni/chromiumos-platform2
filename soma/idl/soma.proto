// Copyright 2015 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
syntax = "proto2";
option optimize_for = LITE_RUNTIME;

package soma;

import "soma_sandbox_spec.proto";

service Soma {
  // Given a fully-specified service name, returns a sandbox specification.
  // Example usage:
  //
  //   soma.GetSandboxSpecRequest request;
  //   soma.GetSandboxSpecResponse response;
  //   request.set_endpoint_name("com.foo.my-service.my-endpoint");
  //   soma_proxy->GetSandboxSpec(&request, &response);
  rpc GetSandboxSpec(GetSandboxSpecRequest) returns (GetSandboxSpecResponse);

  // Returns all SandboxSpecs marked with a 'persistent' annotation.
  rpc GetPersistentSandboxSpecs(GetPersistentSandboxSpecsRequest)
      returns (GetPersistentSandboxSpecsResponse);
}

message GetSandboxSpecRequest {
  optional string endpoint_name = 1;  // e.g. com.foo.my-overlay.my-endpoint
}

message GetSandboxSpecResponse {
  enum Error {
    INVALID_NAME = 1;
  }
  // Defined in soma_sandbox_spec.proto.
  optional SandboxSpec sandbox_spec = 1;
}

message GetPersistentSandboxSpecsRequest {
}

message GetPersistentSandboxSpecsResponse {
  // Defined in soma_sandbox_spec.proto.
  repeated SandboxSpec sandbox_specs = 1;
}
