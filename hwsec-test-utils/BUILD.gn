# Copyright 2020 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//common-mk/pkg_config.gni")

group("all") {
  deps = [
    ":attestation-injected-keys",
    ":hwsec-test-va",
  ]
  if (use.test) {
    deps += [ ":hwsec-test-utils_testrunner" ]
  }
}

pkg_config("target_defaults") {
  pkg_deps = [
    "libbrillo",
    "libchrome-${libbase_ver}",
  ]
  defines = [ "USE_TPM2=${use.tpm2}" ]
}

executable("attestation-injected-keys") {
  configs += [ ":target_defaults" ]
  sources = [
    "attestation_injected_keys/main.cc",
    "attestation_injected_keys/utility.cc",
  ]

  # NOSORT
  pkg_deps = [
    # system_api depends on protobuf (or protobuf-lite). It must appear
    # before protobuf here or the linker flags won't be in the right
    # order.
    "system_api",
    "protobuf",
  ]
}

executable("hwsec-test-va") {
  configs += [ ":target_defaults" ]
  sources = [ "verified_access/main.cc" ]
  deps = [ ":verified_access_library" ]

  # NOSORT
  pkg_deps = [
    # system_api depends on protobuf (or protobuf-lite). It must appear
    # before protobuf here or the linker flags won't be in the right
    # order.
    "system_api",
    "protobuf",
  ]
}

source_set("verified_access_library") {
  configs += [ ":target_defaults" ]
  sources = [ "verified_access/verified_access.cc" ]
}

if (use.test) {
  pkg_config("hwsec-test-utils_testrunner_config") {
    pkg_deps = [ "libchrome-test-${libbase_ver}" ]
  }

  executable("hwsec-test-utils_testrunner") {
    configs += [
      ":target_defaults",
      ":hwsec-test-utils_testrunner_config",
      "//common-mk:test",
    ]
    sources = [ "verified_access/verified_access_test.cc" ]
    deps = [
      ":verified_access_library",
      "//common-mk/testrunner",
    ]

    # NOSORT
    pkg_deps = [
      # system_api depends on protobuf (or protobuf-lite). It must appear
      # before protobuf here or the linker flags won't be in the right
      # order.
      "system_api",
      "protobuf",
    ]
  }
}
