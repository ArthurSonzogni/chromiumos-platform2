# Copyright (c) 2010 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# description "Recovery service"
# author "chromium-os-dev@googlegroups.com"

start on started udev

# TODO: replace debug output and auto-shutdown with a friendly UI
# tracked in http://code.google.com/p/chromium-os/issues/detail?id=4769
script

    RECOVERY_LOG=/var/log/recovery.log
    TARGET_DEVICE=/dev/sda3

    log() {
      echo "$(date): $*" >> $RECOVERY_LOG
    }

    wait_for_device() {
      local target_device=$1
      local dump_log=/tmp/dumpe2fs.log

      dumpe2fs -h $target_device 2>$dump_log 1>/dev/null
      log "dump content of dumpe2fs stdout"
      log "==================================="
      cat $dump_log >> $RECOVERY_LOG
      log "==================================="

      if grep "No such device" $dump_log 2>&1; then
        log "$target_device not yet ready"
        echo 0
      else
        log "$target_device is ready"
        echo 1
      fi
    }

    if [ -e /mnt/stateful_partition/.recovery ]; then
      log "Recovery boot. Check if target device is ready"

      count=0
      while true
      do
        log "Waiting for target device to be ready. Sleep 1 second"
        sleep 1
        count=$(expr $count + 1)

        if [ $(wait_for_device $TARGET_DEVICE) -eq 1 ]; then
          log "About to launch installer"
          break
        fi

        if [ $count -eq 10 ]; then
          log "target device not ready after 10 seconds. Abort recovery"
          exit 0
        fi
      done

      # Only launch installer when target device is ready
      /usr/sbin/chromeos-install --run_as_root --yes >> $RECOVERY_LOG
      log "Recovery installer completed"
      # shut down and power off the device
      log "Shut down device"
      shutdown -h now
    else
      log "Regular boot. Skip recovery"
    fi
end script
console output
