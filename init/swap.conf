# Copyright (c) 2012 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description     "Setup compressed memory swap"
author          "chromium-os-dev@chromium.org"

# Overload init script to enable dynamic swap configuration
# This allows using:
#     initctl emit config_swap CONFIG_SWAP=[yes|no]
# to dynamically enable/disable swap.

start on starting system-services or config_swap CONFIG_SWAP=yes
stop on config_swap CONFIG_SWAP=no

pre-start script
  SWAP_ENABLE_FILE="/home/chronos/.swap_enabled"

  # Overload init script to enable dynamic swap configuration
  # This allows using:
  # initctl emit config_swap CONFIG_SWAP=[yes|no]
  # to dynamically enable/disable swap.
  if [ "$CONFIG_SWAP" = "yes" ]; then
    if [ ! -e $SWAP_ENABLE_FILE ] ; then
      touch $SWAP_ENABLE_FILE
    else
      exit 0
    fi
  fi

  if [ -f $SWAP_ENABLE_FILE ]; then
    # disable low memory notifier - it is incompatible with swap
    echo -n "off" > /sys/kernel/mm/chromeos-low_mem/margin
    # Load zram module - assume it is compiled in on failure.
    modprobe zram || true
    # Allocate zram (compressed ram disk) for swap.
    # Set uncompressed size to 1.5 of total memory.
    #
    # Memory calculations need 64bit arithmetic !
    # Verify modifications on all platforms.
    TOTAL_MEMSIZE_KB=$(awk '/MemTotal/ { print $2 }' /proc/meminfo)
    ZRAM_SIZE_B=$(($TOTAL_MEMSIZE_KB * 3 / 2 * 1024))
    # If zram is compiled in setting the disksize twice will fail.
    # Just ignore the error and continue.
    echo $ZRAM_SIZE_B >/sys/block/zram0/disksize || true
    mkswap /dev/zram0
    swapon /dev/zram0
  fi
end script

post-stop script
  SWAP_ENABLE_FILE="/home/chronos/.swap_enabled"
  if [ -f  $SWAP_ENABLE_FILE ]; then
    rm  $SWAP_ENABLE_FILE
    # Restore low memory notification before disabling swap
    echo -n "on" >/sys/kernel/mm/chromeos-low_mem/margin
    swapoff /dev/zram0
    # Allow zram to be compiled in - failure in rmmod is ok.
    rmmod zram || true
  fi
end script

