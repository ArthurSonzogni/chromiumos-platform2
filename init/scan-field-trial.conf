# Copyright (c) 2013 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This script randomly selects who is in a field trial of the shill
# progressive scan test.  In the scan methodology before progressive scan,
# wifi scan involved chromeos's 'shill' module asking wpa_supplicant to
# perform a single scan over all wifi frequencies/channels. Progressive
# wifi scan moves the responsibility for certain scans into shill and
# breaks up the monolithic request into smaller bits.
#
# This study tests progressive scan versus full scan and, for progressive
# scan, tests different scan sizes to determine which produces the
# shortest average scan-to-connect time.
#
# The field trial is expected to run through the M29 Beta until 20 August 2013.

description     "Setup progressive scan wifi experiment (field trial)"
author          "chromium-os-dev@chromium.org"

# Run before shill, so shill can start the experiment in this boot cycle.
# Note that we do almost nothing after the first run.
start on starting shill
task

script
  # PSCAN_ENABLE_FILE indicates that user has manually decided to use
  # progressive scan.  Don't include them in the statistics.
  # PSCAN_FIELD_TRIAL indicates that the user is in the field trial
  # and, if so, the user's group in the experiment.
  PSCAN_ENABLE_FILE=/home/chronos/.progressive_scan
  PSCAN_FIELD_TRIAL=/home/chronos/.progressive_scan_variation

  # Already enrolled --- nothing to do.
  if [ -f $PSCAN_FIELD_TRIAL ]; then
    logger -t "$UPSTART_JOB" "Already enrolled --- nothing to do."
    exit 0
  fi

  # Controlling things manually -- don't skew the results.
  if [ -f $PSCAN_ENABLE_FILE ]; then
    output="User manually configured progressive scan."
    output="$output Not enrolling in field trial."
    logger -t "$UPSTART_JOB" "$output"
    exit 0
  fi

  # Enroll the user in a random group.
  group_percentile=$(( $(date +%s) % 100 ))

  # Selects 5 groups for the study, each group comprising 1% of the total
  # population leaving 95% of the population out of the study, entirely.
  case "$group_percentile" in
    0) group="c" ;;  # Control group.
    1) group="1" ;;  # Each scan adds 33% of known channels (4 minimum).
    2) group="2" ;;  # Each scan adds 50% of known channels (4 minimum).
    3) group="3" ;;  # Each scan adds 50% of known channels (8 minimum).
    4) group="4" ;;  # Each scan adds 100% of known channels (8 minimum).
    *) group="x" ;;  # Not participating.
  esac
  logger -t "$UPSTART_JOB" \
    "Enrolling in group '$group' (group_percentile=$group_percentile)."
  echo $group | sudo -u chronos tee $PSCAN_FIELD_TRIAL > /dev/null
end script
