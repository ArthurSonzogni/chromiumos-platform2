# Copyright (c) 2010 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# boot-complete
#
# Processing required during boot after login prompt is displayed.
# Primarily, this means calculating boot time statistics.

start on login-prompt-ready

task

script
  # The login-prompt-ready signal is emitted every time the login
  # screen is displayed so the check below makes sure boot stats are
  # generated only once per boot.
  #
  # TODO(jrbarnette): Fix this code not to rely on the
  # implementation details of bootstat.
  [ -f /tmp/uptime-login-prompt-ready ] && exit

  # If ureadahead is still running, then presumably it's performing
  # a boot trace.  We only care about tracing until login prompt, so
  # stop the process now.
  #
  # We have to ignore the return status in case ureadahead has
  # already completed, because pkill helpfully exits with a non-zero
  # status when no process was found.
  pkill '^ureadahead$' || true

  # Record the time and disk statistics for when we got here.
  # Chrome reports boot time on the login screen and to UMA based on
  # this timestamp.
  #
  # TODO(jrbarnette):  Coupling with Chrome needs to be reduced.
  # Chrome currently relies on bootstat putting the timestamps into
  # /tmp/uptime-login-prompt-ready (just like this script does).
  bootstat login-prompt-ready

  # Report boot disk usage metrics to UMA.  Note that boot times
  # (including firmware and total boot time) are currently sent to
  # UMA directly from Chrome.
  #
  # TODO(jrbarnette): Fix this code not to rely on the
  # implementation details of bootstat.
  SECTORS_READ=$(cut -f 3 -d ' ' /tmp/disk-login-prompt-ready)
  SECTORS_WRITTEN=$(cut -f 7 -d ' ' /tmp/disk-login-prompt-ready)

  metrics_client \
    Platform.BootSectorsRead $SECTORS_READ 1 1000000 50 &
  metrics_client \
    Platform.BootSectorsWritten $SECTORS_WRITTEN 1 10000 50 &

  # Checks if the device shut down while in suspend and sends metrics
  # as if coming out of suspend.
  send_metrics_on_resume -b &
end script
