#!/bin/sh

# Copyright (c) 2010 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This script can be called during startup to trash the stateful partition
# and possibly reset the other root filesystem

. /usr/sbin/chromeos-common.sh

# stateful partition isn't around for logging, so dump to the screen:
set -x

if [ $(id -u) -ne 0 ]; then
  echo 'You must run this as root'
  exit 1
fi

wipedev() {
  DEV="$1"
  SECTORS=$(numsectors ${DEV})
  BLK_SIZE=$((4 * 1024 * 1024 / 512))  # 4MiB in 512-byte sectors
  FULL_BLKS=$(($SECTORS / $BLK_SIZE))
  REMAINDER_SECTORS=$(($SECTORS % $BLK_SIZE))
  dd if=/dev/zero of=${DEV} bs=4M count=${FULL_BLKS}
  dd if=/dev/zero of=${DEV} bs=512 count=${REMAINDER_SECTORS} \
    seek=$(($FULL_BLKS * $BLK_SIZE))
}

copydev() {
  SRC_DEV="$1"
  DST_DEV="$2"
  SRC_SECTORS=$(numsectors ${SRC_DEV})
  DST_SECTORS=$(numsectors ${DST_DEV})
  if [ "$SRC_SECTORS" != "$DST_SECTORS" ]; then 
    echo "Parition size mismatch. Wiping $DST_DEV instead."
    wipedev $DST_DEV
  else
    BLK_SIZE=$((4 * 1024 * 1024 / 512))  # 4MiB in 512-byte sectors
    FULL_BLKS=$(($SECTORS / $BLK_SIZE))
    REMAINDER_SECTORS=$(($SECTORS % $BLK_SIZE))
    dd if=${SRC_DEV} of=${DST_DEV} bs=4M count=${FULL_BLKS}
    dd if=${SRC_DEV} of=${DST_DEV} bs=512 count=${REMAINDER_SECTORS} \
      seek=$(($FULL_BLKS * $BLK_SIZE)) skip=$(($FULL_BLKS * $BLK_SIZE))
  fi
}

# Root devs are sda3, sda5. 
# Kernel devs to go along with these are sda2, sda4 respectively.
ROOT_DEV=$(rootdev)
STATE_DEV=${ROOT_DEV%[0-9]*}1
OTHER_ROOT_DEV=$(echo $ROOT_DEV | tr '35' '53')
KERNEL_DEV=$(echo $ROOT_DEV | tr '35' '24')
OTHER_KERNEL_DEV=$(echo $OTHER_ROOT_DEV | tr '35' '24')
WIPE_PART_NUM=${OTHER_ROOT_DEV##[/a-z]*[/a-z]}

if [ "$WIPE_PART_NUM" != "3" ] && [ "$WIPE_PART_NUM" != "5" ]
then
  echo "Invalid partition to wipe, $WIPE_PART_NUM (${OTHER_ROOT_DEV})"
  exit 1
fi

umount /mnt/stateful_partition

# Wipe everything on the stateful partition.
wipedev ${STATE_DEV}

/sbin/mkfs.ext3 "$STATE_DEV"

echo "Erasing rootfs on ${OTHER_ROOT_DEV}..."
copydev ${ROOT_DEV} ${OTHER_ROOT_DEV}

echo "Erasing kernelfs on ${OTHER_KERNEL_DEV}..."
copydev ${KERNEL_DEV} ${OTHER_KERNEL_DEV}

# Flush linux caches.
sync
echo 3 > /proc/sys/vm/drop_caches

/sbin/shutdown -r now
sleep 1d  # Wait for shutdown
