# Copyright 2018 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

template("generate_dbus_proxies") {
  forward_variables_from(invoker,
                         [
                           "dbus_service_config",
                           "proxy_output_file",
                           "mock_output_file",
                           "proxy_path_in_mocks",
                         ])

  # TODO(crbug.com/983008): Remove the action of generating bindings by C++
  # generator and the action making diff after the migration completes.

  h_dir = "${root_gen_dir}"
  h_tmp_dir = "${root_gen_dir}/dbus_tmp"

  if (!defined(proxy_output_file)) {
    proxy_output_file = ""
  }
  if (!defined(proxy_path_in_mocks)) {
    proxy_path_in_mocks = ""
  }
  if (!defined(mock_output_file)) {
    mock_output_file = ""
  }
  if (!defined(dbus_service_config) || dbus_service_config == "") {
    service_config = ""
  } else {
    service_config = rebase_path(dbus_service_config)
  }

  headers_by_cpp_generator = "__${target_name}_cpp"
  action(headers_by_cpp_generator) {
    sources = invoker.sources
    script = "//common-mk/file_generator_wrapper.py"
    outputs = []
    args = [ "generate-chromeos-dbus-bindings" ] +
           rebase_path(sources, root_build_dir) +
           [ "--service-config=${service_config}" ]
    if (proxy_output_file != "") {
      outputs += [ "${h_tmp_dir}/${proxy_output_file}" ]
      args += [ "--proxy=${h_tmp_dir}/${proxy_output_file}" ]
    }
    if (mock_output_file != "") {
      outputs += [ "${h_tmp_dir}/${mock_output_file}" ]
      args += [ "--mock=${h_tmp_dir}/${mock_output_file}" ]
    }
    if (proxy_path_in_mocks != "") {
      args += [ "--proxy-path-in-mocks=${proxy_path_in_mocks}" ]
    }
  }

  headers_by_go_generator = "__${target_name}_go"
  action(headers_by_go_generator) {
    sources = invoker.sources
    script = "//common-mk/file_generator_wrapper.py"
    outputs = []
    args = [
      "go-generate-chromeos-dbus-bindings",
      "-service-config=${service_config}",
    ]
    if (proxy_output_file != "") {
      outputs += [ "${h_dir}/${proxy_output_file}" ]
      args += [ "-proxy=${h_dir}/${proxy_output_file}" ]
    }
    if (mock_output_file != "") {
      outputs += [ "${h_dir}/${mock_output_file}" ]
      args += [ "-mock=${h_dir}/${mock_output_file}" ]
    }
    if (proxy_path_in_mocks != "") {
      args += [ "-proxy-path-for-mocks=${proxy_path_in_mocks}" ]
    }
    args += rebase_path(sources, root_build_dir)
  }

  if (proxy_output_file != "") {
    action("__${target_name}_proxy_diff") {
      sources = [
        "${h_dir}/${proxy_output_file}",
        "${h_tmp_dir}/${proxy_output_file}",
      ]
      script = "//common-mk/generated_dbus_header_diff.py"
      outputs = [ "${h_tmp_dir}/${proxy_output_file}.diff" ]
      args = [
        "--out",
        "${h_tmp_dir}/${proxy_output_file}.diff",
        "--cpp",
        "${h_tmp_dir}/${proxy_output_file}",
        "--go",
        "${h_dir}/${proxy_output_file}",
      ]
      deps = [
        ":${headers_by_cpp_generator}",
        ":${headers_by_go_generator}",
      ]
    }
  }

  if (mock_output_file != "") {
    action("__${target_name}_mock_diff") {
      sources = [
        "${h_dir}/${mock_output_file}",
        "${h_tmp_dir}/${mock_output_file}",
      ]
      script = "//common-mk/generated_dbus_header_diff.py"
      outputs = [ "${h_tmp_dir}/${mock_output_file}.diff" ]
      args = [
        "--out",
        "${h_tmp_dir}/${mock_output_file}.diff",
        "--cpp",
        "${h_tmp_dir}/${mock_output_file}",
        "--go",
        "${h_dir}/${mock_output_file}",
      ]
      deps = [
        ":${headers_by_cpp_generator}",
        ":${headers_by_go_generator}",
      ]
    }
  }

  group(target_name) {
    public_deps = [ ":${headers_by_go_generator}" ]
    deps = []
    if (proxy_output_file != "") {
      deps += [ ":__${target_name}_proxy_diff" ]
    }
    if (mock_output_file != "") {
      deps += [ ":__${target_name}_mock_diff" ]
    }
  }
}
