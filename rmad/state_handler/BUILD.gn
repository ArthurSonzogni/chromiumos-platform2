# Copyright 2022 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//common-mk/pkg_config.gni")

pkg_config("target_defaults") {
  pkg_deps = [
    "iioservice_ipc",
    "libbrillo",
    "libchrome",
    "mojo_service_manager",
    "openssl",
    "protobuf",
    "re2",
    "system_api",
  ]
}

source_set("libstate_handler") {
  sources = [
    "base_state_handler.cc",
    "check_calibration_state_handler.cc",
    "components_repair_state_handler.cc",
    "device_destination_state_handler.cc",
    "finalize_state_handler.cc",
    "provision_device_state_handler.cc",
    "repair_complete_state_handler.cc",
    "restock_state_handler.cc",
    "run_calibration_state_handler.cc",
    "setup_calibration_state_handler.cc",
    "state_handler_manager.cc",
    "update_device_info_state_handler.cc",
    "update_ro_firmware_state_handler.cc",
    "welcome_screen_state_handler.cc",
    "wipe_selection_state_handler.cc",
    "write_protect_disable_complete_state_handler.cc",
    "write_protect_disable_method_state_handler.cc",
    "write_protect_disable_physical_state_handler.cc",
    "write_protect_disable_rsu_state_handler.cc",
    "write_protect_enable_physical_state_handler.cc",
  ]
  configs += [ ":target_defaults" ]
  deps = [
    "//rmad/logs:liblogs",
    "//rmad/metrics:libmetrics",
    "//rmad/system:libsystem",
    "//rmad/udev:libudev",
    "//rmad/utils:libutils",
  ]
}

if (use.test) {
  source_set("libstate_handler_test") {
    sources = [
      "base_state_handler_test.cc",
      "check_calibration_state_handler_test.cc",
      "components_repair_state_handler_test.cc",
      "device_destination_state_handler_test.cc",
      "finalize_state_handler_test.cc",
      "provision_device_state_handler_test.cc",
      "repair_complete_state_handler_test.cc",
      "restock_state_handler_test.cc",
      "run_calibration_state_handler_test.cc",
      "setup_calibration_state_handler_test.cc",
      "state_handler_manager_test.cc",
      "state_handler_test_common.cc",
      "update_device_info_state_handler_test.cc",
      "update_ro_firmware_state_handler_test.cc",
      "welcome_screen_state_handler_test.cc",
      "wipe_selection_state_handler_test.cc",
      "write_protect_disable_complete_state_handler_test.cc",
      "write_protect_disable_method_state_handler_test.cc",
      "write_protect_disable_physical_state_handler_test.cc",
      "write_protect_disable_rsu_state_handler_test.cc",
      "write_protect_enable_physical_state_handler_test.cc",
    ]
    configs += [
      "//common-mk:test",
      ":target_defaults",
    ]
    deps = [ ":libstate_handler" ]
  }
}
