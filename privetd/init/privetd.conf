# Copyright 2014 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description   "Privet protocol handler daemon"
author        "chromium-os-dev@chromium.org"

start on starting system-services and stopped iptables and stopped ip6tables
stop on stopping system-services

env PRIVETD_LOG_LEVEL=0
env PRIVETD_PORT=8080

pre-start script
  # Add a rule to the firewall to allow HTTP traffic except from the
  # loopback interface (to prevent e.g. Chrome from connecting.)
  # TODO(avakulenko): localhost is left enabled for now for testing...
  #iptables -I INPUT -i lo -p tcp --dport ${PRIVETD_PORT} -j REJECT
  #ip6tables -I INPUT -i lo -p tcp --dport ${PRIVETD_PORT} -j REJECT
  iptables -A INPUT -p tcp --dport ${PRIVETD_PORT} -j ACCEPT
  ip6tables -A INPUT -p tcp --dport ${PRIVETD_PORT} -j ACCEPT

  # privetd runs as its own user, and can't create files on the filesystem.
  # Create appropriate workspaces accordingly.
  mkdir -m 0755 -p /var/lib/privetd
  chown -R privetd:privetd /var/lib/privetd
end script

# Minijail actually forks off our desired process
expect fork

exec minijail0 -i -g privetd -u privetd /usr/bin/privetd \
    --v="${PRIVETD_LOG_LEVEL}" \
    --port="${PRIVETD_PORT}"

post-stop script
  # Delete the rules we previously added
  iptables -D INPUT -p tcp --dport ${PRIVETD_PORT} -j ACCEPT
  ip6tables -D INPUT -p tcp --dport ${PRIVETD_PORT} -j ACCEPT
  # TODO(avakulenko): uncomment below
  #iptables -D INPUT -i lo -p tcp --dport ${PRIVETD_PORT} -j REJECT
  #ip6tables -D INPUT -i lo -p tcp --dport ${PRIVETD_PORT} -j REJECT
end script
