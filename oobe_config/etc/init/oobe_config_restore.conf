# Copyright 2018 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description     "OOBE Config Restore daemon"
author          "chromium-os-dev@chromium.org"

start on started boot-services and started tpm_managerd
stop on stopping boot-services

# 32MByte RLIMIT_MEMLOCK, this is required because oobe_config_restore uses
# SecureBlob to store rollback_data proto, and SecureBlob uses mlock().
limit memlock 33554432 33554432

# Process is not system critical but may also not recover if killed.
oom score -400

pre-start script
  systemd-tmpfiles --create --remove --clean \
    /usr/lib/tmpfiles.d/on-demand/oobe_config_restore.conf

  # Cleanup any files that may have been left by a preceding rollback. Which
  # files we clean depends on the ownership status of the device.
  minijail0 --config /usr/share/minijail/rollback_cleanup.conf \
    /usr/sbin/rollback_cleanup

  # If OOBE is already completed then do not start the service.
  if [ -f "/home/chronos/.oobe_completed" ]; then
    stop
  fi
end script

# Minijail actually forks off the desired process.
expect fork

script
  # Only bind-mount flex_config directory if present, otherwise minijail0 will
  # fail. Use $@ array instead of empty string, as passing in "" to minijail
  # also fails.
  set --
  if [ -d /mnt/stateful_partition/unencrypted/flex_config ]; then
    set -- "$@" -b /mnt/stateful_partition/unencrypted/flex_config,,1
  fi

  exec minijail0 --config=/usr/share/minijail/oobe_config_restore.conf \
    "$@" \
    -- /usr/sbin/oobe_config_restore

end script


post-start exec minijail0 -u oobe_config_restore -G \
    /usr/bin/gdbus wait --system --timeout 15 org.chromium.OobeConfigRestore
