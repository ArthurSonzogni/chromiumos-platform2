# Copyright 2019 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

description     "OOBE Config Save"
author          "chromium-os-dev@chromium.org"

# oobe_config_save is supposed to run during shutdown while both ui and shill
# are up.
#
# ui_stop_waiter and shill_stop_waiter start with a hook on the "stopping"
# events of shill and ui respectively. That means once ui or shill start
# shutting down, their waiter job will be started, and with it, this job will
# start. The waiter jobs only stop once oobe_config_save is stopped, thus
# preventing shill or ui to stop while oobe_config_save is still running.
# Running oobe_config_save multiple times or too early, e.g. when ui job stops
# is fine.
# Improvements are tracked in b/249486838.
start on starting ui_stop_waiter or starting shill_stop_waiter

# 32MByte RLIMIT_MEMLOCK, this is required because oobe_config_save uses
# SecureBlob to store owner key, install attributes and shill default profile,
# and SecureBlob uses mlock().
limit memlock 33554432 33554432

# Process is not system critical but can not recover if killed.
oom score -400

# Prepare required folders and files for saving. Stop job if no save is
# requested.
pre-start script
  if [ -f "/mnt/stateful_partition/.save_rollback_data" ]; then
    # tmpfiles config will delete /mnt/stateful_partition/.save_rollback_data
    # and create relevant files and folders for oobe_config_save to be able to
    # run as oobe_config_save user.
    systemd-tmpfiles --create --remove --clean \
      /usr/lib/tmpfiles.d/on-demand/oobe_config_save.conf
  else
    # Do not run oobe_config_save if flag to trigger it is not present.
    stop
  fi
end script

task
script
  minijail0 --config /usr/share/minijail/oobe_config_save.conf \
    /usr/sbin/oobe_config_save

  # If the save file was written successfully and a powerwash is pending, switch
  # to a rollback powerwash.
  if [ -f "/var/lib/oobe_config_save/.data_saved" ] &&
      [ -f "/mnt/stateful_partition/factory_install_reset" ]; then
    echo "fast safe keepimg rollback reason=oobe_config_save" > \
      /mnt/stateful_partition/factory_install_reset
  fi
end script
