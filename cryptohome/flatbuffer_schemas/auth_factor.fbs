// Copyright 2021 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

include "auth_block_state.fbs";

namespace cryptohome;

// Metadata common to all auth factors.
table SerializedCommonMetadata {
  // ChromeOS version.
  // Contains CHROMEOS_RELEASE_VERSION from /etc/lsb-release.
  // See: https://chromium.googlesource.com/chromiumos/docs/+/HEAD/os_config.md
  // Captured whenever the serialized factor is created or updated.
  chromeos_version_last_updated:string (id:0);
  // Chrome version.
  // The format is defined by and the value supplied by the client.
  // Captured whenever the serialized factor is created or updated.
  chrome_version_last_updated:string (id:1);
}

// Metadata for a `PASSWORD` auth factor.
table SerializedPasswordMetadata {}

// Metadata for a `PIN` auth factor.
table SerializedPinMetadata {}

// Metadata for a `Recovery` auth factor.
table SerializedCryptohomeRecoveryMetadata {}

// Metadata for a `KIOSK` auth factor.
table SerializedKioskMetadata {}

// Metadata for a "Smart Card" auth factor.
table SerializedSmartCardMetadata {
  // DER-encoded blob of the X.509 Subject Public Key Info.
  public_key_spki_der:[ubyte] (id: 0);
}

// Metadata for a `Fingerprint` auth factor.
table SerializedFingerprintMetadata {}

// Union that holds auth factor's metadata.
union SerializedAuthFactorMetadata {
  SerializedPasswordMetadata,
  SerializedPinMetadata,
  SerializedCryptohomeRecoveryMetadata,
  SerializedKioskMetadata,
  SerializedSmartCardMetadata,
  SerializedFingerprintMetadata
}

// Container that stores information about auth factor to be persisted on disk.
table SerializedAuthFactor {
  auth_block_state:_serialized_.AuthBlockState (id: 0);
  metadata:SerializedAuthFactorMetadata (id: 2);
  common_metadata:SerializedCommonMetadata (id: 3);
}

root_type SerializedAuthFactor;
